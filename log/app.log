2023-01-13 05:25:16.426 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\a.mj
2023-01-13 05:25:16.428 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko.mj
2023-01-13 05:25:16.428 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko2.mj
2023-01-13 05:25:16.428 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\program.mj
2023-01-13 05:25:16.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test1312.mj
2023-01-13 05:25:16.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test300.mj
2023-01-13 05:25:16.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test301.mj
2023-01-13 05:25:16.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test302.mj
2023-01-13 05:25:16.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test303.mj
2023-01-13 05:25:16.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test420.mj
2023-01-13 05:25:16.430 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test666.mj
2023-01-13 05:25:16.430 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:53)] - Parsing source file: D:\ETF\13E114PP1\git\MJCompiler\src\test\resources\test999.mj
2023-01-13 05:25:16.475 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 3: Parsed symbol: program - PROGRAM
2023-01-13 05:25:16.475 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 3: Parsed symbol: test301 - IDENTIFIER
2023-01-13 05:25:16.475 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 5: Parsed symbol: const - CONST
2023-01-13 05:25:16.477 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 5: Parsed symbol: int - IDENTIFIER
2023-01-13 05:25:16.477 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 5: Parsed symbol: nula - IDENTIFIER
2023-01-13 05:25:16.477 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 5: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.477 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 5: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 05:25:16.479 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 5: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.479 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 6: Parsed symbol: const - CONST
2023-01-13 05:25:16.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 6: Parsed symbol: int - IDENTIFIER
2023-01-13 05:25:16.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 6: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:25:16.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 6: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 6: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 6: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 7: Parsed symbol: const - CONST
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 7: Parsed symbol: int - IDENTIFIER
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 7: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 7: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 7: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 7: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: int - IDENTIFIER
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:25:16.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.482 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.482 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: , - COMMA
2023-01-13 05:25:16.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: niz2 - IDENTIFIER
2023-01-13 05:25:16.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: , - COMMA
2023-01-13 05:25:16.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: a - IDENTIFIER
2023-01-13 05:25:16.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: , - COMMA
2023-01-13 05:25:16.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: b - IDENTIFIER
2023-01-13 05:25:16.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 9: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 10: Parsed symbol: char - IDENTIFIER
2023-01-13 05:25:16.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 10: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:25:16.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 10: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 10: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 10: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 12: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:25:16.485 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:25:16.485 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:25:16.485 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:25:16.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: z - IDENTIFIER
2023-01-13 05:25:16.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: , - COMMA
2023-01-13 05:25:16.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:25:16.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: d - IDENTIFIER
2023-01-13 05:25:16.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:25:16.487 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: temp - IDENTIFIER
2023-01-13 05:25:16.487 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 15: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.488 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 16: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:25:16.488 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 17: Parsed symbol: temp - IDENTIFIER
2023-01-13 05:25:16.489 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 17: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.489 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 17: Parsed symbol: z - IDENTIFIER
2023-01-13 05:25:16.489 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 17: Parsed symbol: + - ADDITION
2023-01-13 05:25:16.489 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 17: Parsed symbol: d - IDENTIFIER
2023-01-13 05:25:16.490 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 17: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.490 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 18: Parsed symbol: return - RETURN
2023-01-13 05:25:16.491 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 18: Parsed symbol: temp - IDENTIFIER
2023-01-13 05:25:16.491 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 18: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.491 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 19: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:25:16.491 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: char - IDENTIFIER
2023-01-13 05:25:16.491 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: sumC - IDENTIFIER
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: char - IDENTIFIER
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: zz - IDENTIFIER
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: , - COMMA
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: char - IDENTIFIER
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: dd - IDENTIFIER
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 20: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 21: Parsed symbol: return - RETURN
2023-01-13 05:25:16.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 21: Parsed symbol: zz - IDENTIFIER
2023-01-13 05:25:16.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 21: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 22: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:25:16.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 24: Parsed symbol: void - VOID
2023-01-13 05:25:16.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 24: Parsed symbol: main - IDENTIFIER
2023-01-13 05:25:16.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 24: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 24: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.494 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 25: Parsed symbol: int - IDENTIFIER
2023-01-13 05:25:16.494 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 25: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.495 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 25: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.495 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 26: Parsed symbol: bool - IDENTIFIER
2023-01-13 05:25:16.495 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 26: Parsed symbol: bt - IDENTIFIER
2023-01-13 05:25:16.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 26: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 27: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:25:16.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 28: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 28: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 28: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 05:25:16.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 28: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 29: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 29: Parsed symbol: ++ - INCREMENT
2023-01-13 05:25:16.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 29: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 30: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 30: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 30: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 30: Parsed symbol: + - ADDITION
2023-01-13 05:25:16.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 30: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:25:16.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 30: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 31: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 31: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 31: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 31: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:25:16.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 31: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:25:16.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 31: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 32: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 32: Parsed symbol: -- - DECREMENT
2023-01-13 05:25:16.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 32: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 33: Parsed symbol: print - PRINT
2023-01-13 05:25:16.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 33: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 33: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 33: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.501 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 33: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.501 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 37: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:25:16.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 37: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 37: Parsed symbol: new - NEW
2023-01-13 05:25:16.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 37: Parsed symbol: char - IDENTIFIER
2023-01-13 05:25:16.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 37: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 37: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:25:16.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 37: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 37: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 38: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:25:16.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 38: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 38: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 05:25:16.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 38: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 38: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 38: Parsed symbol: a - CONST_CHARACTER
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 38: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 39: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 39: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 39: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 39: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 39: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 39: Parsed symbol: b - CONST_CHARACTER
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 39: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 40: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 40: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 40: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 40: Parsed symbol: - - SUBTRACTION
2023-01-13 05:25:16.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 40: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:25:16.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 40: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 40: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 40: Parsed symbol: c - CONST_CHARACTER
2023-01-13 05:25:16.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 40: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 41: Parsed symbol: print - PRINT
2023-01-13 05:25:16.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 41: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 41: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 41: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 41: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 41: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 41: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 41: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: print - PRINT
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:25:16.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 42: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 45: Parsed symbol: read - READ
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 45: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 45: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 45: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 45: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:25:16.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: + - ADDITION
2023-01-13 05:25:16.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:25:16.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:25:16.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: a - IDENTIFIER
2023-01-13 05:25:16.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: / - DIVISION
2023-01-13 05:25:16.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: % - MODULO
2023-01-13 05:25:16.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: + - ADDITION
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 46: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 47: Parsed symbol: print - PRINT
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 47: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 47: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 47: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 47: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 51: Parsed symbol: print - PRINT
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 51: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 51: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 51: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 51: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 51: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 51: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 51: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 54: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 54: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 54: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 54: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 54: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 54: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:25:16.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 54: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:25:16.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:25:16.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: 4 - CONST_NUMBER
2023-01-13 05:25:16.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: , - COMMA
2023-01-13 05:25:16.513 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:25:16.513 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.513 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: , - COMMA
2023-01-13 05:25:16.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:25:16.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: 4 - CONST_NUMBER
2023-01-13 05:25:16.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: , - COMMA
2023-01-13 05:25:16.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:25:16.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 65: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 67: Parsed symbol: while - WHILE
2023-01-13 05:25:16.515 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 67: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.515 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 67: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:25:16.515 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 67: Parsed symbol: > - GREATER_THAN
2023-01-13 05:25:16.515 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 67: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:25:16.516 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 67: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.517 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 67: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:25:16.517 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 68: Parsed symbol: break - BREAK
2023-01-13 05:25:16.517 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 68: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.517 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 69: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:25:16.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 70: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:25:16.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 70: Parsed symbol: . - DOT
2023-01-13 05:25:16.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 70: Parsed symbol: foreach - FOR_EACH
2023-01-13 05:25:16.518 ERROR [main] [rs.ac.bg.etf.pp1.MJParser.report_error(MJParser.java:531)] - Syntax error while parsing:  on line 70 and column 11 while parsing FOR_EACH with value foreach
2023-01-13 05:25:16.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 70: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 70: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 70: Parsed symbol: => - LAMBDA
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 70: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 73: Parsed symbol: print - PRINT
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 73: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 73: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 73: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 73: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 74: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 75: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 75: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 86: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 86: Parsed symbol: a - IDENTIFIER
2023-01-13 05:25:16.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 86: Parsed symbol: , - COMMA
2023-01-13 05:25:16.519 WARN [main] [rs.ac.bg.etf.pp1.MJParser.log_error_recovery(MJParser.java:517)] - Performed error recovery on line 70 and column 11. The parsing must go on!
2023-01-13 05:25:16.520 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 86: Parsed symbol: , - COMMA
2023-01-13 05:25:16.521 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 86: Parsed symbol: b - IDENTIFIER
2023-01-13 05:25:16.521 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 86: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:25:16.521 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 86: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:25:16.521 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 86: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:25:16.522 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 86: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:25:16.522 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 87: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:25:16.522 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:483)] - Line 88: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:25:16.522 ERROR [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:68)] - Managed to recover from #1 syntax error(s). Will print AST, but will not proceed with semantic analysis and code generation.
2023-01-13 05:25:16.526 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:73)] - Program(
  ProgramName(
   test301
  ) [ProgramName]
  GlobalDeclarationListMulti(
    GlobalDeclarationListMulti(
      GlobalDeclarationListMulti(
        GlobalDeclarationListMulti(
          GlobalDeclarationListMulti(
            GlobalDeclarationListEpsilon(
            ) [GlobalDeclarationListEpsilon]
            GlobalDeclarationConstDecl(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDeclarationListSingle(
                  ConstAssignment(
                   nula
                    AssignmentOperator(
                    ) [AssignmentOperator]
                    ConstantNumber(
                      SignEpsilon(
                      ) [SignEpsilon]
                     0
                    ) [ConstantNumber]
                  ) [ConstAssignment]
                ) [ConstDeclarationListSingle]
              ) [ConstDecl]
            ) [GlobalDeclarationConstDecl]
          ) [GlobalDeclarationListMulti]
          GlobalDeclarationConstDecl(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDeclarationListSingle(
                ConstAssignment(
                 jedan
                  AssignmentOperator(
                  ) [AssignmentOperator]
                  ConstantNumber(
                    SignEpsilon(
                    ) [SignEpsilon]
                   1
                  ) [ConstantNumber]
                ) [ConstAssignment]
              ) [ConstDeclarationListSingle]
            ) [ConstDecl]
          ) [GlobalDeclarationConstDecl]
        ) [GlobalDeclarationListMulti]
        GlobalDeclarationConstDecl(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDeclarationListSingle(
              ConstAssignment(
               pet
                AssignmentOperator(
                ) [AssignmentOperator]
                ConstantNumber(
                  SignEpsilon(
                  ) [SignEpsilon]
                 5
                ) [ConstantNumber]
              ) [ConstAssignment]
            ) [ConstDeclarationListSingle]
          ) [ConstDecl]
        ) [GlobalDeclarationConstDecl]
      ) [GlobalDeclarationListMulti]
      GlobalDeclarationVarDecl(
        VarDeclList(
          Type(
           int
          ) [Type]
          VariableDeclarationListMulti(
            VariableDeclarationListMulti(
              VariableDeclarationListMulti(
                VariableDeclarationSingle(
                  VariableDeclaration(
                   niz
                    MaybeArrayIsArray(
                    ) [MaybeArrayIsArray]
                  ) [VariableDeclaration]
                ) [VariableDeclarationSingle]
                VariableDeclaration(
                 niz2
                  MaybeArrayIsArray(
                  ) [MaybeArrayIsArray]
                ) [VariableDeclaration]
              ) [VariableDeclarationListMulti]
              VariableDeclaration(
               a
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [VariableDeclaration]
            ) [VariableDeclarationListMulti]
            VariableDeclaration(
             b
              MaybeArrayEpsilon(
              ) [MaybeArrayEpsilon]
            ) [VariableDeclaration]
          ) [VariableDeclarationListMulti]
        ) [VarDeclList]
      ) [GlobalDeclarationVarDecl]
    ) [GlobalDeclarationListMulti]
    GlobalDeclarationVarDecl(
      VarDeclList(
        Type(
         char
        ) [Type]
        VariableDeclarationSingle(
          VariableDeclaration(
           nizch
            MaybeArrayIsArray(
            ) [MaybeArrayIsArray]
          ) [VariableDeclaration]
        ) [VariableDeclarationSingle]
      ) [VarDeclList]
    ) [GlobalDeclarationVarDecl]
  ) [GlobalDeclarationListMulti]
  MethodDeclarationListMulti(
    MethodDeclarationListMulti(
      MethodDeclarationListMulti(
        MethodDeclarationListEpsilon(
        ) [MethodDeclarationListEpsilon]
        MethodDeclaration(
          MethodDeclarationHeader(
            ReturnTypeNonVoid(
              Type(
               int
              ) [Type]
            ) [ReturnTypeNonVoid]
           sum
          ) [MethodDeclarationHeader]
          MaybeFormParsIsFormPars(
            FormParsMulti(
              FormParsSingle(
                FormalParameter(
                  Type(
                   int
                  ) [Type]
                 z
                  MaybeArrayEpsilon(
                  ) [MaybeArrayEpsilon]
                ) [FormalParameter]
              ) [FormParsSingle]
              FormalParameter(
                Type(
                 int
                ) [Type]
               d
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [FormalParameter]
            ) [FormParsMulti]
          ) [MaybeFormParsIsFormPars]
          LocalVarDeclListMulti(
            LocalVarDeclEpsilon(
            ) [LocalVarDeclEpsilon]
            LocalVarDecl(
              Type(
               int
              ) [Type]
              LocalVariableDeclarationSingle(
                LocalVariableDeclaration(
                 temp
                  MaybeArrayEpsilon(
                  ) [MaybeArrayEpsilon]
                ) [LocalVariableDeclaration]
              ) [LocalVariableDeclarationSingle]
            ) [LocalVarDecl]
          ) [LocalVarDeclListMulti]
          StatementListMulti(
            StatementListMulti(
              StatementListEpsilon(
              ) [StatementListEpsilon]
              StatementDesignator(
                DesignatorStatementAssignment(
                  DesignatorIdentifier(
                   temp
                  ) [DesignatorIdentifier]
                  AssignmentOperationExpr(
                    AssignmentOperator(
                    ) [AssignmentOperator]
                    ExprMulti(
                      ExprSingle(
                        SignEpsilon(
                        ) [SignEpsilon]
                        TermSingle(
                          FactorDesignator(
                            DesignatorIdentifier(
                             z
                            ) [DesignatorIdentifier]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AdditionOperatorAddition(
                      ) [AdditionOperatorAddition]
                      TermSingle(
                        FactorDesignator(
                          DesignatorIdentifier(
                           d
                          ) [DesignatorIdentifier]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprMulti]
                  ) [AssignmentOperationExpr]
                ) [DesignatorStatementAssignment]
              ) [StatementDesignator]
            ) [StatementListMulti]
            StatementReturn(
              MaybeReturnValueIsReturnValue(
                ExprSingle(
                  SignEpsilon(
                  ) [SignEpsilon]
                  TermSingle(
                    FactorDesignator(
                      DesignatorIdentifier(
                       temp
                      ) [DesignatorIdentifier]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [MaybeReturnValueIsReturnValue]
            ) [StatementReturn]
          ) [StatementListMulti]
        ) [MethodDeclaration]
      ) [MethodDeclarationListMulti]
      MethodDeclaration(
        MethodDeclarationHeader(
          ReturnTypeNonVoid(
            Type(
             char
            ) [Type]
          ) [ReturnTypeNonVoid]
         sumC
        ) [MethodDeclarationHeader]
        MaybeFormParsIsFormPars(
          FormParsMulti(
            FormParsSingle(
              FormalParameter(
                Type(
                 char
                ) [Type]
               zz
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [FormalParameter]
            ) [FormParsSingle]
            FormalParameter(
              Type(
               char
              ) [Type]
             dd
              MaybeArrayEpsilon(
              ) [MaybeArrayEpsilon]
            ) [FormalParameter]
          ) [FormParsMulti]
        ) [MaybeFormParsIsFormPars]
        LocalVarDeclEpsilon(
        ) [LocalVarDeclEpsilon]
        StatementListMulti(
          StatementListEpsilon(
          ) [StatementListEpsilon]
          StatementReturn(
            MaybeReturnValueIsReturnValue(
              ExprSingle(
                SignEpsilon(
                ) [SignEpsilon]
                TermSingle(
                  FactorDesignator(
                    DesignatorIdentifier(
                     zz
                    ) [DesignatorIdentifier]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [MaybeReturnValueIsReturnValue]
          ) [StatementReturn]
        ) [StatementListMulti]
      ) [MethodDeclaration]
    ) [MethodDeclarationListMulti]
    MethodDeclaration(
      MethodDeclarationHeader(
        ReturnTypeVoid(
        ) [ReturnTypeVoid]
       main
      ) [MethodDeclarationHeader]
      MaybeFormParsEpsilon(
      ) [MaybeFormParsEpsilon]
      LocalVarDeclListMulti(
        LocalVarDeclListMulti(
          LocalVarDeclEpsilon(
          ) [LocalVarDeclEpsilon]
          LocalVarDecl(
            Type(
             int
            ) [Type]
            LocalVariableDeclarationSingle(
              LocalVariableDeclaration(
               bodovi
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [LocalVariableDeclaration]
            ) [LocalVariableDeclarationSingle]
          ) [LocalVarDecl]
        ) [LocalVarDeclListMulti]
        LocalVarDecl(
          Type(
           bool
          ) [Type]
          LocalVariableDeclarationSingle(
            LocalVariableDeclaration(
             bt
              MaybeArrayEpsilon(
              ) [MaybeArrayEpsilon]
            ) [LocalVariableDeclaration]
          ) [LocalVariableDeclarationSingle]
        ) [LocalVarDecl]
      ) [LocalVarDeclListMulti]
      StatementListMulti(
        StatementListMulti(
          StatementListMulti(
            StatementListMulti(
              StatementListMulti(
                StatementListMulti(
                  StatementListMulti(
                    StatementListMulti(
                      StatementListMulti(
                        StatementListMulti(
                          StatementListMulti(
                            StatementListMulti(
                              StatementListMulti(
                                StatementListMulti(
                                  StatementListMulti(
                                    StatementListMulti(
                                      StatementListMulti(
                                        StatementListMulti(
                                          StatementListMulti(
                                            StatementListMulti(
                                              StatementListMulti(
                                                StatementListEpsilon(
                                                ) [StatementListEpsilon]
                                                StatementDesignator(
                                                  DesignatorStatementAssignment(
                                                    DesignatorIdentifier(
                                                     bodovi
                                                    ) [DesignatorIdentifier]
                                                    AssignmentOperationExpr(
                                                      AssignmentOperator(
                                                      ) [AssignmentOperator]
                                                      ExprSingle(
                                                        SignEpsilon(
                                                        ) [SignEpsilon]
                                                        TermSingle(
                                                          FactorConstant(
                                                            ConstFactorNumber(
                                                             0
                                                            ) [ConstFactorNumber]
                                                          ) [FactorConstant]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [AssignmentOperationExpr]
                                                  ) [DesignatorStatementAssignment]
                                                ) [StatementDesignator]
                                              ) [StatementListMulti]
                                              StatementDesignator(
                                                DesignatorStatementIncrement(
                                                  DesignatorIdentifier(
                                                   bodovi
                                                  ) [DesignatorIdentifier]
                                                ) [DesignatorStatementIncrement]
                                              ) [StatementDesignator]
                                            ) [StatementListMulti]
                                            StatementDesignator(
                                              DesignatorStatementAssignment(
                                                DesignatorIdentifier(
                                                 bodovi
                                                ) [DesignatorIdentifier]
                                                AssignmentOperationExpr(
                                                  AssignmentOperator(
                                                  ) [AssignmentOperator]
                                                  ExprMulti(
                                                    ExprSingle(
                                                      SignEpsilon(
                                                      ) [SignEpsilon]
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorIdentifier(
                                                           bodovi
                                                          ) [DesignatorIdentifier]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                    AdditionOperatorAddition(
                                                    ) [AdditionOperatorAddition]
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorIdentifier(
                                                         jedan
                                                        ) [DesignatorIdentifier]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprMulti]
                                                ) [AssignmentOperationExpr]
                                              ) [DesignatorStatementAssignment]
                                            ) [StatementDesignator]
                                          ) [StatementListMulti]
                                          StatementDesignator(
                                            DesignatorStatementAssignment(
                                              DesignatorIdentifier(
                                               bodovi
                                              ) [DesignatorIdentifier]
                                              AssignmentOperationExpr(
                                                AssignmentOperator(
                                                ) [AssignmentOperator]
                                                ExprSingle(
                                                  SignEpsilon(
                                                  ) [SignEpsilon]
                                                  TermMulti(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorIdentifier(
                                                         bodovi
                                                        ) [DesignatorIdentifier]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                    MultiplicationOperatorMultiplication(
                                                    ) [MultiplicationOperatorMultiplication]
                                                    FactorDesignator(
                                                      DesignatorIdentifier(
                                                       pet
                                                      ) [DesignatorIdentifier]
                                                    ) [FactorDesignator]
                                                  ) [TermMulti]
                                                ) [ExprSingle]
                                              ) [AssignmentOperationExpr]
                                            ) [DesignatorStatementAssignment]
                                          ) [StatementDesignator]
                                        ) [StatementListMulti]
                                        StatementDesignator(
                                          DesignatorStatementDecrement(
                                            DesignatorIdentifier(
                                             bodovi
                                            ) [DesignatorIdentifier]
                                          ) [DesignatorStatementDecrement]
                                        ) [StatementDesignator]
                                      ) [StatementListMulti]
                                      StatementPrint(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               bodovi
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                        MaybePrintWidthEpsilon(
                                        ) [MaybePrintWidthEpsilon]
                                      ) [StatementPrint]
                                    ) [StatementListMulti]
                                    StatementDesignator(
                                      DesignatorStatementAssignment(
                                        DesignatorIdentifier(
                                         nizch
                                        ) [DesignatorIdentifier]
                                        AssignmentOperationExpr(
                                          AssignmentOperator(
                                          ) [AssignmentOperator]
                                          ExprSingle(
                                            SignEpsilon(
                                            ) [SignEpsilon]
                                            TermSingle(
                                              FactorNewArray(
                                                Type(
                                                 char
                                                ) [Type]
                                                ArrayElement(
                                                  ExprSingle(
                                                    SignEpsilon(
                                                    ) [SignEpsilon]
                                                    TermSingle(
                                                      FactorConstant(
                                                        ConstFactorNumber(
                                                         3
                                                        ) [ConstFactorNumber]
                                                      ) [FactorConstant]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ArrayElement]
                                              ) [FactorNewArray]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [AssignmentOperationExpr]
                                      ) [DesignatorStatementAssignment]
                                    ) [StatementDesignator]
                                  ) [StatementListMulti]
                                  StatementDesignator(
                                    DesignatorStatementAssignment(
                                      DesignatorElementAccess(
                                        DesignatorIdentifier(
                                         nizch
                                        ) [DesignatorIdentifier]
                                        ArrayElement(
                                          ExprSingle(
                                            SignEpsilon(
                                            ) [SignEpsilon]
                                            TermSingle(
                                              FactorConstant(
                                                ConstFactorNumber(
                                                 0
                                                ) [ConstFactorNumber]
                                              ) [FactorConstant]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ArrayElement]
                                      ) [DesignatorElementAccess]
                                      AssignmentOperationExpr(
                                        AssignmentOperator(
                                        ) [AssignmentOperator]
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorConstant(
                                              ConstFactorCharacter(
                                               a
                                              ) [ConstFactorCharacter]
                                            ) [FactorConstant]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [AssignmentOperationExpr]
                                    ) [DesignatorStatementAssignment]
                                  ) [StatementDesignator]
                                ) [StatementListMulti]
                                StatementDesignator(
                                  DesignatorStatementAssignment(
                                    DesignatorElementAccess(
                                      DesignatorIdentifier(
                                       nizch
                                      ) [DesignatorIdentifier]
                                      ArrayElement(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               jedan
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ArrayElement]
                                    ) [DesignatorElementAccess]
                                    AssignmentOperationExpr(
                                      AssignmentOperator(
                                      ) [AssignmentOperator]
                                      ExprSingle(
                                        SignEpsilon(
                                        ) [SignEpsilon]
                                        TermSingle(
                                          FactorConstant(
                                            ConstFactorCharacter(
                                             b
                                            ) [ConstFactorCharacter]
                                          ) [FactorConstant]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [AssignmentOperationExpr]
                                  ) [DesignatorStatementAssignment]
                                ) [StatementDesignator]
                              ) [StatementListMulti]
                              StatementDesignator(
                                DesignatorStatementAssignment(
                                  DesignatorElementAccess(
                                    DesignatorIdentifier(
                                     nizch
                                    ) [DesignatorIdentifier]
                                    ArrayElement(
                                      ExprMulti(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               pet
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                        AdditionOperatorSubtraction(
                                        ) [AdditionOperatorSubtraction]
                                        TermSingle(
                                          FactorConstant(
                                            ConstFactorNumber(
                                             3
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermSingle]
                                      ) [ExprMulti]
                                    ) [ArrayElement]
                                  ) [DesignatorElementAccess]
                                  AssignmentOperationExpr(
                                    AssignmentOperator(
                                    ) [AssignmentOperator]
                                    ExprSingle(
                                      SignEpsilon(
                                      ) [SignEpsilon]
                                      TermSingle(
                                        FactorConstant(
                                          ConstFactorCharacter(
                                           c
                                          ) [ConstFactorCharacter]
                                        ) [FactorConstant]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [AssignmentOperationExpr]
                                ) [DesignatorStatementAssignment]
                              ) [StatementDesignator]
                            ) [StatementListMulti]
                            StatementPrint(
                              ExprSingle(
                                SignEpsilon(
                                ) [SignEpsilon]
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorElementAccess(
                                      DesignatorIdentifier(
                                       nizch
                                      ) [DesignatorIdentifier]
                                      ArrayElement(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorConstant(
                                              ConstFactorNumber(
                                               1
                                              ) [ConstFactorNumber]
                                            ) [FactorConstant]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ArrayElement]
                                    ) [DesignatorElementAccess]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              MaybePrintWidthEpsilon(
                              ) [MaybePrintWidthEpsilon]
                            ) [StatementPrint]
                          ) [StatementListMulti]
                          StatementPrint(
                            ExprSingle(
                              SignEpsilon(
                              ) [SignEpsilon]
                              TermSingle(
                                FactorDesignator(
                                  DesignatorElementAccess(
                                    DesignatorIdentifier(
                                     nizch
                                    ) [DesignatorIdentifier]
                                    ArrayElement(
                                      ExprSingle(
                                        SignEpsilon(
                                        ) [SignEpsilon]
                                        TermMulti(
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               jedan
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                          MultiplicationOperatorMultiplication(
                                          ) [MultiplicationOperatorMultiplication]
                                          FactorConstant(
                                            ConstFactorNumber(
                                             2
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermMulti]
                                      ) [ExprSingle]
                                    ) [ArrayElement]
                                  ) [DesignatorElementAccess]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            MaybePrintWidthEpsilon(
                            ) [MaybePrintWidthEpsilon]
                          ) [StatementPrint]
                        ) [StatementListMulti]
                        StatementRead(
                          DesignatorIdentifier(
                           bodovi
                          ) [DesignatorIdentifier]
                        ) [StatementRead]
                      ) [StatementListMulti]
                      StatementDesignator(
                        DesignatorStatementAssignment(
                          DesignatorIdentifier(
                           bodovi
                          ) [DesignatorIdentifier]
                          AssignmentOperationExpr(
                            AssignmentOperator(
                            ) [AssignmentOperator]
                            ExprMulti(
                              ExprMulti(
                                ExprSingle(
                                  SignNegative(
                                  ) [SignNegative]
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorIdentifier(
                                       bodovi
                                      ) [DesignatorIdentifier]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                                AdditionOperatorAddition(
                                ) [AdditionOperatorAddition]
                                TermMulti(
                                  TermSingle(
                                    FactorExpr(
                                      ExprMulti(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermMulti(
                                            TermMulti(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorIdentifier(
                                                   pet
                                                  ) [DesignatorIdentifier]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                              MultiplicationOperatorMultiplication(
                                              ) [MultiplicationOperatorMultiplication]
                                              FactorDesignator(
                                                DesignatorIdentifier(
                                                 a
                                                ) [DesignatorIdentifier]
                                              ) [FactorDesignator]
                                            ) [TermMulti]
                                            MultiplicationOperatorDivision(
                                            ) [MultiplicationOperatorDivision]
                                            FactorConstant(
                                              ConstFactorNumber(
                                               2
                                              ) [ConstFactorNumber]
                                            ) [FactorConstant]
                                          ) [TermMulti]
                                        ) [ExprSingle]
                                        AdditionOperatorSubtraction(
                                        ) [AdditionOperatorSubtraction]
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorIdentifier(
                                             jedan
                                            ) [DesignatorIdentifier]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprMulti]
                                    ) [FactorExpr]
                                  ) [TermSingle]
                                  MultiplicationOperatorMultiplication(
                                  ) [MultiplicationOperatorMultiplication]
                                  FactorDesignator(
                                    DesignatorIdentifier(
                                     bodovi
                                    ) [DesignatorIdentifier]
                                  ) [FactorDesignator]
                                ) [TermMulti]
                              ) [ExprMulti]
                              AdditionOperatorSubtraction(
                              ) [AdditionOperatorSubtraction]
                              TermSingle(
                                FactorExpr(
                                  ExprMulti(
                                    ExprMulti(
                                      ExprSingle(
                                        SignEpsilon(
                                        ) [SignEpsilon]
                                        TermMulti(
                                          TermSingle(
                                            FactorConstant(
                                              ConstFactorNumber(
                                               3
                                              ) [ConstFactorNumber]
                                            ) [FactorConstant]
                                          ) [TermSingle]
                                          MultiplicationOperatorModulo(
                                          ) [MultiplicationOperatorModulo]
                                          FactorConstant(
                                            ConstFactorNumber(
                                             2
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermMulti]
                                      ) [ExprSingle]
                                      AdditionOperatorAddition(
                                      ) [AdditionOperatorAddition]
                                      TermMulti(
                                        TermSingle(
                                          FactorConstant(
                                            ConstFactorNumber(
                                             3
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermSingle]
                                        MultiplicationOperatorMultiplication(
                                        ) [MultiplicationOperatorMultiplication]
                                        FactorConstant(
                                          ConstFactorNumber(
                                           2
                                          ) [ConstFactorNumber]
                                        ) [FactorConstant]
                                      ) [TermMulti]
                                    ) [ExprMulti]
                                    AdditionOperatorSubtraction(
                                    ) [AdditionOperatorSubtraction]
                                    TermSingle(
                                      FactorConstant(
                                        ConstFactorNumber(
                                         3
                                        ) [ConstFactorNumber]
                                      ) [FactorConstant]
                                    ) [TermSingle]
                                  ) [ExprMulti]
                                ) [FactorExpr]
                              ) [TermSingle]
                            ) [ExprMulti]
                          ) [AssignmentOperationExpr]
                        ) [DesignatorStatementAssignment]
                      ) [StatementDesignator]
                    ) [StatementListMulti]
                    StatementPrint(
                      ExprSingle(
                        SignEpsilon(
                        ) [SignEpsilon]
                        TermSingle(
                          FactorDesignator(
                            DesignatorIdentifier(
                             bodovi
                            ) [DesignatorIdentifier]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      MaybePrintWidthEpsilon(
                      ) [MaybePrintWidthEpsilon]
                    ) [StatementPrint]
                  ) [StatementListMulti]
                  StatementPrint(
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorDesignator(
                          DesignatorElementAccess(
                            DesignatorIdentifier(
                             nizch
                            ) [DesignatorIdentifier]
                            ArrayElement(
                              ExprSingle(
                                SignEpsilon(
                                ) [SignEpsilon]
                                TermSingle(
                                  FactorConstant(
                                    ConstFactorNumber(
                                     1
                                    ) [ConstFactorNumber]
                                  ) [FactorConstant]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ArrayElement]
                          ) [DesignatorElementAccess]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    MaybePrintWidthEpsilon(
                    ) [MaybePrintWidthEpsilon]
                  ) [StatementPrint]
                ) [StatementListMulti]
                StatementDesignator(
                  DesignatorStatementAssignment(
                    DesignatorElementAccess(
                      DesignatorIdentifier(
                       niz
                      ) [DesignatorIdentifier]
                      ArrayElement(
                        ExprSingle(
                          SignEpsilon(
                          ) [SignEpsilon]
                          TermSingle(
                            FactorConstant(
                              ConstFactorNumber(
                               2
                              ) [ConstFactorNumber]
                            ) [FactorConstant]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ArrayElement]
                    ) [DesignatorElementAccess]
                    AssignmentOperationExpr(
                      AssignmentOperator(
                      ) [AssignmentOperator]
                      ExprSingle(
                        SignEpsilon(
                        ) [SignEpsilon]
                        TermSingle(
                          FactorConstant(
                            ConstFactorNumber(
                             5
                            ) [ConstFactorNumber]
                          ) [FactorConstant]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [AssignmentOperationExpr]
                  ) [DesignatorStatementAssignment]
                ) [StatementDesignator]
              ) [StatementListMulti]
              StatementDesignator(
                DesignatorStatementAssignment(
                  DesignatorIdentifier(
                   bodovi
                  ) [DesignatorIdentifier]
                  AssignmentOperationExpr(
                    AssignmentOperator(
                    ) [AssignmentOperator]
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorFunctionInvocation(
                          FunctionInvocationHeader(
                            DesignatorIdentifier(
                             sum
                            ) [DesignatorIdentifier]
                          ) [FunctionInvocationHeader]
                          FunctionInvocation(
                            MaybeActParsIsActPars(
                              ActParsMulti(
                                ActParsSingle(
                                  ActualParameter(
                                    ExprSingle(
                                      SignEpsilon(
                                      ) [SignEpsilon]
                                      TermSingle(
                                        FactorFunctionInvocation(
                                          FunctionInvocationHeader(
                                            DesignatorIdentifier(
                                             sum
                                            ) [DesignatorIdentifier]
                                          ) [FunctionInvocationHeader]
                                          FunctionInvocation(
                                            MaybeActParsIsActPars(
                                              ActParsMulti(
                                                ActParsSingle(
                                                  ActualParameter(
                                                    ExprSingle(
                                                      SignEpsilon(
                                                      ) [SignEpsilon]
                                                      TermSingle(
                                                        FactorConstant(
                                                          ConstFactorNumber(
                                                           4
                                                          ) [ConstFactorNumber]
                                                        ) [FactorConstant]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ActualParameter]
                                                ) [ActParsSingle]
                                                ActualParameter(
                                                  ExprSingle(
                                                    SignEpsilon(
                                                    ) [SignEpsilon]
                                                    TermSingle(
                                                      FactorConstant(
                                                        ConstFactorNumber(
                                                         5
                                                        ) [ConstFactorNumber]
                                                      ) [FactorConstant]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActualParameter]
                                              ) [ActParsMulti]
                                            ) [MaybeActParsIsActPars]
                                          ) [FunctionInvocation]
                                        ) [FactorFunctionInvocation]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ActualParameter]
                                ) [ActParsSingle]
                                ActualParameter(
                                  ExprSingle(
                                    SignEpsilon(
                                    ) [SignEpsilon]
                                    TermSingle(
                                      FactorFunctionInvocation(
                                        FunctionInvocationHeader(
                                          DesignatorIdentifier(
                                           sum
                                          ) [DesignatorIdentifier]
                                        ) [FunctionInvocationHeader]
                                        FunctionInvocation(
                                          MaybeActParsIsActPars(
                                            ActParsMulti(
                                              ActParsSingle(
                                                ActualParameter(
                                                  ExprSingle(
                                                    SignEpsilon(
                                                    ) [SignEpsilon]
                                                    TermSingle(
                                                      FactorConstant(
                                                        ConstFactorNumber(
                                                         4
                                                        ) [ConstFactorNumber]
                                                      ) [FactorConstant]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActualParameter]
                                              ) [ActParsSingle]
                                              ActualParameter(
                                                ExprSingle(
                                                  SignEpsilon(
                                                  ) [SignEpsilon]
                                                  TermSingle(
                                                    FactorConstant(
                                                      ConstFactorNumber(
                                                       5
                                                      ) [ConstFactorNumber]
                                                    ) [FactorConstant]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ActualParameter]
                                            ) [ActParsMulti]
                                          ) [MaybeActParsIsActPars]
                                        ) [FunctionInvocation]
                                      ) [FactorFunctionInvocation]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ActualParameter]
                              ) [ActParsMulti]
                            ) [MaybeActParsIsActPars]
                          ) [FunctionInvocation]
                        ) [FactorFunctionInvocation]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [AssignmentOperationExpr]
                ) [DesignatorStatementAssignment]
              ) [StatementDesignator]
            ) [StatementListMulti]
            StatementWhile(
              StatementWhileHeader(
              ) [StatementWhileHeader]
              ConditionSingle(
                CondTermSingle(
                  CondFactMulti(
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorConstant(
                          ConstFactorNumber(
                           2
                          ) [ConstFactorNumber]
                        ) [FactorConstant]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelationalOperatorGreaterThan(
                    ) [RelationalOperatorGreaterThan]
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorConstant(
                          ConstFactorNumber(
                           1
                          ) [ConstFactorNumber]
                        ) [FactorConstant]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMulti]
                ) [CondTermSingle]
              ) [ConditionSingle]
              StatementBlock(
                StatementListMulti(
                  StatementListEpsilon(
                  ) [StatementListEpsilon]
                  StatementBreak(
                  ) [StatementBreak]
                ) [StatementListMulti]
              ) [StatementBlock]
            ) [StatementWhile]
          ) [StatementListMulti]
          StatementDesignator(
            DesignatorStatementAssignment(
              DesignatorIdentifier(
               niz
              ) [DesignatorIdentifier]
              AssignmentOperationError(
              ) [AssignmentOperationError]
            ) [DesignatorStatementAssignment]
          ) [StatementDesignator]
        ) [StatementListMulti]
        StatementDesignator(
          DesignatorStatementUnpack(
            DesignatorStatementUnpackHeader(
            ) [DesignatorStatementUnpackHeader]
            DesignatorListMulti(
              DesignatorListMulti(
                DesignatorListSingle(
                  MaybeDesignatorIsDesignator(
                    DesignatorIdentifier(
                     a
                    ) [DesignatorIdentifier]
                  ) [MaybeDesignatorIsDesignator]
                ) [DesignatorListSingle]
                MaybeDesignatorEpsilon(
                ) [MaybeDesignatorEpsilon]
              ) [DesignatorListMulti]
              MaybeDesignatorIsDesignator(
                DesignatorIdentifier(
                 b
                ) [DesignatorIdentifier]
              ) [MaybeDesignatorIsDesignator]
            ) [DesignatorListMulti]
            DesignatorStatementIntermezzo(
              AssignmentOperator(
              ) [AssignmentOperator]
            ) [DesignatorStatementIntermezzo]
            DesignatorIdentifier(
             niz
            ) [DesignatorIdentifier]
          ) [DesignatorStatementUnpack]
        ) [StatementDesignator]
      ) [StatementListMulti]
    ) [MethodDeclaration]
  ) [MethodDeclarationListMulti]
) [Program]
2023-01-13 05:30:02.427 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\a.mj
2023-01-13 05:30:02.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko.mj
2023-01-13 05:30:02.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko2.mj
2023-01-13 05:30:02.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\program.mj
2023-01-13 05:30:02.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test1312.mj
2023-01-13 05:30:02.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test300.mj
2023-01-13 05:30:02.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test301.mj
2023-01-13 05:30:02.429 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test302.mj
2023-01-13 05:30:02.430 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test303.mj
2023-01-13 05:30:02.430 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test420.mj
2023-01-13 05:30:02.430 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test666.mj
2023-01-13 05:30:02.430 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:53)] - Parsing source file: D:\ETF\13E114PP1\git\MJCompiler\src\test\resources\test999.mj
2023-01-13 05:30:02.475 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 3: Parsed symbol: program - PROGRAM
2023-01-13 05:30:02.475 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 3: Parsed symbol: test301 - IDENTIFIER
2023-01-13 05:30:02.475 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: const - CONST
2023-01-13 05:30:02.476 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: int - IDENTIFIER
2023-01-13 05:30:02.476 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: nula - IDENTIFIER
2023-01-13 05:30:02.477 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.477 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 05:30:02.478 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.479 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: const - CONST
2023-01-13 05:30:02.479 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: int - IDENTIFIER
2023-01-13 05:30:02.479 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: const - CONST
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: int - IDENTIFIER
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.480 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: int - IDENTIFIER
2023-01-13 05:30:02.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:30:02.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.481 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: , - COMMA
2023-01-13 05:30:02.482 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: niz2 - IDENTIFIER
2023-01-13 05:30:02.482 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.482 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.482 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: , - COMMA
2023-01-13 05:30:02.482 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: a - IDENTIFIER
2023-01-13 05:30:02.482 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: , - COMMA
2023-01-13 05:30:02.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: b - IDENTIFIER
2023-01-13 05:30:02.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: char - IDENTIFIER
2023-01-13 05:30:02.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:30:02.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.483 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:30:02.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:30:02.484 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:30:02.485 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.485 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:30:02.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: z - IDENTIFIER
2023-01-13 05:30:02.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: , - COMMA
2023-01-13 05:30:02.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:30:02.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: d - IDENTIFIER
2023-01-13 05:30:02.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.486 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:30:02.488 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: temp - IDENTIFIER
2023-01-13 05:30:02.488 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.488 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:30:02.489 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: temp - IDENTIFIER
2023-01-13 05:30:02.490 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.490 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: z - IDENTIFIER
2023-01-13 05:30:02.490 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: + - ADDITION
2023-01-13 05:30:02.490 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: d - IDENTIFIER
2023-01-13 05:30:02.491 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.491 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 18: Parsed symbol: return - RETURN
2023-01-13 05:30:02.491 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 18: Parsed symbol: temp - IDENTIFIER
2023-01-13 05:30:02.491 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 18: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:30:02.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: char - IDENTIFIER
2023-01-13 05:30:02.492 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: sumC - IDENTIFIER
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: char - IDENTIFIER
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: zz - IDENTIFIER
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: , - COMMA
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: char - IDENTIFIER
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: dd - IDENTIFIER
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: return - RETURN
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: zz - IDENTIFIER
2023-01-13 05:30:02.493 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.494 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 22: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:30:02.494 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: void - VOID
2023-01-13 05:30:02.494 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: main - IDENTIFIER
2023-01-13 05:30:02.494 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.494 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.495 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: int - IDENTIFIER
2023-01-13 05:30:02.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 26: Parsed symbol: bool - IDENTIFIER
2023-01-13 05:30:02.496 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 26: Parsed symbol: bt - IDENTIFIER
2023-01-13 05:30:02.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 26: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 27: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:30:02.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 05:30:02.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 29: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 29: Parsed symbol: ++ - INCREMENT
2023-01-13 05:30:02.497 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 29: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: + - ADDITION
2023-01-13 05:30:02.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:30:02.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:30:02.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:30:02.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 32: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 32: Parsed symbol: -- - DECREMENT
2023-01-13 05:30:02.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 32: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: print - PRINT
2023-01-13 05:30:02.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.500 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.501 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.501 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:30:02.501 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: new - NEW
2023-01-13 05:30:02.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: char - IDENTIFIER
2023-01-13 05:30:02.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:30:02.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.502 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: a - CONST_CHARACTER
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: b - CONST_CHARACTER
2023-01-13 05:30:02.503 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:30:02.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:30:02.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: - - SUBTRACTION
2023-01-13 05:30:02.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:30:02.504 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: c - CONST_CHARACTER
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: print - PRINT
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: print - PRINT
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.505 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: read - READ
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.506 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:30:02.507 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: + - ADDITION
2023-01-13 05:30:02.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:30:02.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:30:02.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: a - IDENTIFIER
2023-01-13 05:30:02.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: / - DIVISION
2023-01-13 05:30:02.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:30:02.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:30:02.508 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:30:02.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:30:02.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:30:02.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:30:02.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: % - MODULO
2023-01-13 05:30:02.509 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: + - ADDITION
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: print - PRINT
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: print - PRINT
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.510 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:30:02.511 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:30:02.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: 4 - CONST_NUMBER
2023-01-13 05:30:02.512 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: , - COMMA
2023-01-13 05:30:02.513 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:30:02.513 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.513 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: , - COMMA
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: 4 - CONST_NUMBER
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: , - COMMA
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: while - WHILE
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.514 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:30:02.515 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: > - GREATER_THAN
2023-01-13 05:30:02.515 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:30:02.516 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.516 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:30:02.516 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 68: Parsed symbol: break - BREAK
2023-01-13 05:30:02.516 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 68: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.516 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 69: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:30:02.517 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:30:02.517 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: . - DOT
2023-01-13 05:30:02.517 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: foreach - FOR_EACH
2023-01-13 05:30:02.517 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: => - LAMBDA
2023-01-13 05:30:02.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: print - PRINT
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 74: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 75: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 75: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:30:02.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: a - IDENTIFIER
2023-01-13 05:30:02.520 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: , - COMMA
2023-01-13 05:30:02.520 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: , - COMMA
2023-01-13 05:30:02.521 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: b - IDENTIFIER
2023-01-13 05:30:02.521 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:30:02.521 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:30:02.521 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:30:02.522 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:30:02.522 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 87: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:30:02.522 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 88: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:30:02.523 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:78)] - No syntax errors detected, parsing completed successfully! :)
2023-01-13 05:30:02.527 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:83)] - Program(
  ProgramName(
   test301
  ) [ProgramName]
  GlobalDeclarationListMulti(
    GlobalDeclarationListMulti(
      GlobalDeclarationListMulti(
        GlobalDeclarationListMulti(
          GlobalDeclarationListMulti(
            GlobalDeclarationListEpsilon(
            ) [GlobalDeclarationListEpsilon]
            GlobalDeclarationConstDecl(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDeclarationListSingle(
                  ConstAssignment(
                   nula
                    AssignmentOperator(
                    ) [AssignmentOperator]
                    ConstantNumber(
                      SignEpsilon(
                      ) [SignEpsilon]
                     0
                    ) [ConstantNumber]
                  ) [ConstAssignment]
                ) [ConstDeclarationListSingle]
              ) [ConstDecl]
            ) [GlobalDeclarationConstDecl]
          ) [GlobalDeclarationListMulti]
          GlobalDeclarationConstDecl(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDeclarationListSingle(
                ConstAssignment(
                 jedan
                  AssignmentOperator(
                  ) [AssignmentOperator]
                  ConstantNumber(
                    SignEpsilon(
                    ) [SignEpsilon]
                   1
                  ) [ConstantNumber]
                ) [ConstAssignment]
              ) [ConstDeclarationListSingle]
            ) [ConstDecl]
          ) [GlobalDeclarationConstDecl]
        ) [GlobalDeclarationListMulti]
        GlobalDeclarationConstDecl(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDeclarationListSingle(
              ConstAssignment(
               pet
                AssignmentOperator(
                ) [AssignmentOperator]
                ConstantNumber(
                  SignEpsilon(
                  ) [SignEpsilon]
                 5
                ) [ConstantNumber]
              ) [ConstAssignment]
            ) [ConstDeclarationListSingle]
          ) [ConstDecl]
        ) [GlobalDeclarationConstDecl]
      ) [GlobalDeclarationListMulti]
      GlobalDeclarationVarDecl(
        VarDeclList(
          Type(
           int
          ) [Type]
          VariableDeclarationListMulti(
            VariableDeclarationListMulti(
              VariableDeclarationListMulti(
                VariableDeclarationSingle(
                  VariableDeclaration(
                   niz
                    MaybeArrayIsArray(
                    ) [MaybeArrayIsArray]
                  ) [VariableDeclaration]
                ) [VariableDeclarationSingle]
                VariableDeclaration(
                 niz2
                  MaybeArrayIsArray(
                  ) [MaybeArrayIsArray]
                ) [VariableDeclaration]
              ) [VariableDeclarationListMulti]
              VariableDeclaration(
               a
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [VariableDeclaration]
            ) [VariableDeclarationListMulti]
            VariableDeclaration(
             b
              MaybeArrayEpsilon(
              ) [MaybeArrayEpsilon]
            ) [VariableDeclaration]
          ) [VariableDeclarationListMulti]
        ) [VarDeclList]
      ) [GlobalDeclarationVarDecl]
    ) [GlobalDeclarationListMulti]
    GlobalDeclarationVarDecl(
      VarDeclList(
        Type(
         char
        ) [Type]
        VariableDeclarationSingle(
          VariableDeclaration(
           nizch
            MaybeArrayIsArray(
            ) [MaybeArrayIsArray]
          ) [VariableDeclaration]
        ) [VariableDeclarationSingle]
      ) [VarDeclList]
    ) [GlobalDeclarationVarDecl]
  ) [GlobalDeclarationListMulti]
  MethodDeclarationListMulti(
    MethodDeclarationListMulti(
      MethodDeclarationListMulti(
        MethodDeclarationListEpsilon(
        ) [MethodDeclarationListEpsilon]
        MethodDeclaration(
          MethodDeclarationHeader(
            ReturnTypeNonVoid(
              Type(
               int
              ) [Type]
            ) [ReturnTypeNonVoid]
           sum
          ) [MethodDeclarationHeader]
          MaybeFormParsIsFormPars(
            FormParsMulti(
              FormParsSingle(
                FormalParameter(
                  Type(
                   int
                  ) [Type]
                 z
                  MaybeArrayEpsilon(
                  ) [MaybeArrayEpsilon]
                ) [FormalParameter]
              ) [FormParsSingle]
              FormalParameter(
                Type(
                 int
                ) [Type]
               d
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [FormalParameter]
            ) [FormParsMulti]
          ) [MaybeFormParsIsFormPars]
          LocalVarDeclListMulti(
            LocalVarDeclEpsilon(
            ) [LocalVarDeclEpsilon]
            LocalVarDecl(
              Type(
               int
              ) [Type]
              LocalVariableDeclarationSingle(
                LocalVariableDeclaration(
                 temp
                  MaybeArrayEpsilon(
                  ) [MaybeArrayEpsilon]
                ) [LocalVariableDeclaration]
              ) [LocalVariableDeclarationSingle]
            ) [LocalVarDecl]
          ) [LocalVarDeclListMulti]
          StatementListMulti(
            StatementListMulti(
              StatementListEpsilon(
              ) [StatementListEpsilon]
              StatementDesignator(
                DesignatorStatementAssignment(
                  DesignatorIdentifier(
                   temp
                  ) [DesignatorIdentifier]
                  AssignmentOperationExpr(
                    AssignmentOperator(
                    ) [AssignmentOperator]
                    ExprMulti(
                      ExprSingle(
                        SignEpsilon(
                        ) [SignEpsilon]
                        TermSingle(
                          FactorDesignator(
                            DesignatorIdentifier(
                             z
                            ) [DesignatorIdentifier]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AdditionOperatorAddition(
                      ) [AdditionOperatorAddition]
                      TermSingle(
                        FactorDesignator(
                          DesignatorIdentifier(
                           d
                          ) [DesignatorIdentifier]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprMulti]
                  ) [AssignmentOperationExpr]
                ) [DesignatorStatementAssignment]
              ) [StatementDesignator]
            ) [StatementListMulti]
            StatementReturn(
              MaybeReturnValueIsReturnValue(
                ExprSingle(
                  SignEpsilon(
                  ) [SignEpsilon]
                  TermSingle(
                    FactorDesignator(
                      DesignatorIdentifier(
                       temp
                      ) [DesignatorIdentifier]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [MaybeReturnValueIsReturnValue]
            ) [StatementReturn]
          ) [StatementListMulti]
        ) [MethodDeclaration]
      ) [MethodDeclarationListMulti]
      MethodDeclaration(
        MethodDeclarationHeader(
          ReturnTypeNonVoid(
            Type(
             char
            ) [Type]
          ) [ReturnTypeNonVoid]
         sumC
        ) [MethodDeclarationHeader]
        MaybeFormParsIsFormPars(
          FormParsMulti(
            FormParsSingle(
              FormalParameter(
                Type(
                 char
                ) [Type]
               zz
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [FormalParameter]
            ) [FormParsSingle]
            FormalParameter(
              Type(
               char
              ) [Type]
             dd
              MaybeArrayEpsilon(
              ) [MaybeArrayEpsilon]
            ) [FormalParameter]
          ) [FormParsMulti]
        ) [MaybeFormParsIsFormPars]
        LocalVarDeclEpsilon(
        ) [LocalVarDeclEpsilon]
        StatementListMulti(
          StatementListEpsilon(
          ) [StatementListEpsilon]
          StatementReturn(
            MaybeReturnValueIsReturnValue(
              ExprSingle(
                SignEpsilon(
                ) [SignEpsilon]
                TermSingle(
                  FactorDesignator(
                    DesignatorIdentifier(
                     zz
                    ) [DesignatorIdentifier]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [MaybeReturnValueIsReturnValue]
          ) [StatementReturn]
        ) [StatementListMulti]
      ) [MethodDeclaration]
    ) [MethodDeclarationListMulti]
    MethodDeclaration(
      MethodDeclarationHeader(
        ReturnTypeVoid(
        ) [ReturnTypeVoid]
       main
      ) [MethodDeclarationHeader]
      MaybeFormParsEpsilon(
      ) [MaybeFormParsEpsilon]
      LocalVarDeclListMulti(
        LocalVarDeclListMulti(
          LocalVarDeclEpsilon(
          ) [LocalVarDeclEpsilon]
          LocalVarDecl(
            Type(
             int
            ) [Type]
            LocalVariableDeclarationSingle(
              LocalVariableDeclaration(
               bodovi
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [LocalVariableDeclaration]
            ) [LocalVariableDeclarationSingle]
          ) [LocalVarDecl]
        ) [LocalVarDeclListMulti]
        LocalVarDecl(
          Type(
           bool
          ) [Type]
          LocalVariableDeclarationSingle(
            LocalVariableDeclaration(
             bt
              MaybeArrayEpsilon(
              ) [MaybeArrayEpsilon]
            ) [LocalVariableDeclaration]
          ) [LocalVariableDeclarationSingle]
        ) [LocalVarDecl]
      ) [LocalVarDeclListMulti]
      StatementListMulti(
        StatementListMulti(
          StatementListMulti(
            StatementListMulti(
              StatementListMulti(
                StatementListMulti(
                  StatementListMulti(
                    StatementListMulti(
                      StatementListMulti(
                        StatementListMulti(
                          StatementListMulti(
                            StatementListMulti(
                              StatementListMulti(
                                StatementListMulti(
                                  StatementListMulti(
                                    StatementListMulti(
                                      StatementListMulti(
                                        StatementListMulti(
                                          StatementListMulti(
                                            StatementListMulti(
                                              StatementListMulti(
                                                StatementListEpsilon(
                                                ) [StatementListEpsilon]
                                                StatementDesignator(
                                                  DesignatorStatementAssignment(
                                                    DesignatorIdentifier(
                                                     bodovi
                                                    ) [DesignatorIdentifier]
                                                    AssignmentOperationExpr(
                                                      AssignmentOperator(
                                                      ) [AssignmentOperator]
                                                      ExprSingle(
                                                        SignEpsilon(
                                                        ) [SignEpsilon]
                                                        TermSingle(
                                                          FactorConstant(
                                                            ConstFactorNumber(
                                                             0
                                                            ) [ConstFactorNumber]
                                                          ) [FactorConstant]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [AssignmentOperationExpr]
                                                  ) [DesignatorStatementAssignment]
                                                ) [StatementDesignator]
                                              ) [StatementListMulti]
                                              StatementDesignator(
                                                DesignatorStatementIncrement(
                                                  DesignatorIdentifier(
                                                   bodovi
                                                  ) [DesignatorIdentifier]
                                                ) [DesignatorStatementIncrement]
                                              ) [StatementDesignator]
                                            ) [StatementListMulti]
                                            StatementDesignator(
                                              DesignatorStatementAssignment(
                                                DesignatorIdentifier(
                                                 bodovi
                                                ) [DesignatorIdentifier]
                                                AssignmentOperationExpr(
                                                  AssignmentOperator(
                                                  ) [AssignmentOperator]
                                                  ExprMulti(
                                                    ExprSingle(
                                                      SignEpsilon(
                                                      ) [SignEpsilon]
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorIdentifier(
                                                           bodovi
                                                          ) [DesignatorIdentifier]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                    AdditionOperatorAddition(
                                                    ) [AdditionOperatorAddition]
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorIdentifier(
                                                         jedan
                                                        ) [DesignatorIdentifier]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprMulti]
                                                ) [AssignmentOperationExpr]
                                              ) [DesignatorStatementAssignment]
                                            ) [StatementDesignator]
                                          ) [StatementListMulti]
                                          StatementDesignator(
                                            DesignatorStatementAssignment(
                                              DesignatorIdentifier(
                                               bodovi
                                              ) [DesignatorIdentifier]
                                              AssignmentOperationExpr(
                                                AssignmentOperator(
                                                ) [AssignmentOperator]
                                                ExprSingle(
                                                  SignEpsilon(
                                                  ) [SignEpsilon]
                                                  TermMulti(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorIdentifier(
                                                         bodovi
                                                        ) [DesignatorIdentifier]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                    MultiplicationOperatorMultiplication(
                                                    ) [MultiplicationOperatorMultiplication]
                                                    FactorDesignator(
                                                      DesignatorIdentifier(
                                                       pet
                                                      ) [DesignatorIdentifier]
                                                    ) [FactorDesignator]
                                                  ) [TermMulti]
                                                ) [ExprSingle]
                                              ) [AssignmentOperationExpr]
                                            ) [DesignatorStatementAssignment]
                                          ) [StatementDesignator]
                                        ) [StatementListMulti]
                                        StatementDesignator(
                                          DesignatorStatementDecrement(
                                            DesignatorIdentifier(
                                             bodovi
                                            ) [DesignatorIdentifier]
                                          ) [DesignatorStatementDecrement]
                                        ) [StatementDesignator]
                                      ) [StatementListMulti]
                                      StatementPrint(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               bodovi
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                        MaybePrintWidthEpsilon(
                                        ) [MaybePrintWidthEpsilon]
                                      ) [StatementPrint]
                                    ) [StatementListMulti]
                                    StatementDesignator(
                                      DesignatorStatementAssignment(
                                        DesignatorIdentifier(
                                         nizch
                                        ) [DesignatorIdentifier]
                                        AssignmentOperationExpr(
                                          AssignmentOperator(
                                          ) [AssignmentOperator]
                                          ExprSingle(
                                            SignEpsilon(
                                            ) [SignEpsilon]
                                            TermSingle(
                                              FactorNewArray(
                                                Type(
                                                 char
                                                ) [Type]
                                                ArrayElement(
                                                  ExprSingle(
                                                    SignEpsilon(
                                                    ) [SignEpsilon]
                                                    TermSingle(
                                                      FactorConstant(
                                                        ConstFactorNumber(
                                                         3
                                                        ) [ConstFactorNumber]
                                                      ) [FactorConstant]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ArrayElement]
                                              ) [FactorNewArray]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [AssignmentOperationExpr]
                                      ) [DesignatorStatementAssignment]
                                    ) [StatementDesignator]
                                  ) [StatementListMulti]
                                  StatementDesignator(
                                    DesignatorStatementAssignment(
                                      DesignatorElementAccess(
                                        DesignatorIdentifier(
                                         nizch
                                        ) [DesignatorIdentifier]
                                        ArrayElement(
                                          ExprSingle(
                                            SignEpsilon(
                                            ) [SignEpsilon]
                                            TermSingle(
                                              FactorConstant(
                                                ConstFactorNumber(
                                                 0
                                                ) [ConstFactorNumber]
                                              ) [FactorConstant]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ArrayElement]
                                      ) [DesignatorElementAccess]
                                      AssignmentOperationExpr(
                                        AssignmentOperator(
                                        ) [AssignmentOperator]
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorConstant(
                                              ConstFactorCharacter(
                                               a
                                              ) [ConstFactorCharacter]
                                            ) [FactorConstant]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [AssignmentOperationExpr]
                                    ) [DesignatorStatementAssignment]
                                  ) [StatementDesignator]
                                ) [StatementListMulti]
                                StatementDesignator(
                                  DesignatorStatementAssignment(
                                    DesignatorElementAccess(
                                      DesignatorIdentifier(
                                       nizch
                                      ) [DesignatorIdentifier]
                                      ArrayElement(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               jedan
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ArrayElement]
                                    ) [DesignatorElementAccess]
                                    AssignmentOperationExpr(
                                      AssignmentOperator(
                                      ) [AssignmentOperator]
                                      ExprSingle(
                                        SignEpsilon(
                                        ) [SignEpsilon]
                                        TermSingle(
                                          FactorConstant(
                                            ConstFactorCharacter(
                                             b
                                            ) [ConstFactorCharacter]
                                          ) [FactorConstant]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [AssignmentOperationExpr]
                                  ) [DesignatorStatementAssignment]
                                ) [StatementDesignator]
                              ) [StatementListMulti]
                              StatementDesignator(
                                DesignatorStatementAssignment(
                                  DesignatorElementAccess(
                                    DesignatorIdentifier(
                                     nizch
                                    ) [DesignatorIdentifier]
                                    ArrayElement(
                                      ExprMulti(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               pet
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                        AdditionOperatorSubtraction(
                                        ) [AdditionOperatorSubtraction]
                                        TermSingle(
                                          FactorConstant(
                                            ConstFactorNumber(
                                             3
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermSingle]
                                      ) [ExprMulti]
                                    ) [ArrayElement]
                                  ) [DesignatorElementAccess]
                                  AssignmentOperationExpr(
                                    AssignmentOperator(
                                    ) [AssignmentOperator]
                                    ExprSingle(
                                      SignEpsilon(
                                      ) [SignEpsilon]
                                      TermSingle(
                                        FactorConstant(
                                          ConstFactorCharacter(
                                           c
                                          ) [ConstFactorCharacter]
                                        ) [FactorConstant]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [AssignmentOperationExpr]
                                ) [DesignatorStatementAssignment]
                              ) [StatementDesignator]
                            ) [StatementListMulti]
                            StatementPrint(
                              ExprSingle(
                                SignEpsilon(
                                ) [SignEpsilon]
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorElementAccess(
                                      DesignatorIdentifier(
                                       nizch
                                      ) [DesignatorIdentifier]
                                      ArrayElement(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorConstant(
                                              ConstFactorNumber(
                                               1
                                              ) [ConstFactorNumber]
                                            ) [FactorConstant]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ArrayElement]
                                    ) [DesignatorElementAccess]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              MaybePrintWidthEpsilon(
                              ) [MaybePrintWidthEpsilon]
                            ) [StatementPrint]
                          ) [StatementListMulti]
                          StatementPrint(
                            ExprSingle(
                              SignEpsilon(
                              ) [SignEpsilon]
                              TermSingle(
                                FactorDesignator(
                                  DesignatorElementAccess(
                                    DesignatorIdentifier(
                                     nizch
                                    ) [DesignatorIdentifier]
                                    ArrayElement(
                                      ExprSingle(
                                        SignEpsilon(
                                        ) [SignEpsilon]
                                        TermMulti(
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               jedan
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                          MultiplicationOperatorMultiplication(
                                          ) [MultiplicationOperatorMultiplication]
                                          FactorConstant(
                                            ConstFactorNumber(
                                             2
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermMulti]
                                      ) [ExprSingle]
                                    ) [ArrayElement]
                                  ) [DesignatorElementAccess]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            MaybePrintWidthEpsilon(
                            ) [MaybePrintWidthEpsilon]
                          ) [StatementPrint]
                        ) [StatementListMulti]
                        StatementRead(
                          DesignatorIdentifier(
                           bodovi
                          ) [DesignatorIdentifier]
                        ) [StatementRead]
                      ) [StatementListMulti]
                      StatementDesignator(
                        DesignatorStatementAssignment(
                          DesignatorIdentifier(
                           bodovi
                          ) [DesignatorIdentifier]
                          AssignmentOperationExpr(
                            AssignmentOperator(
                            ) [AssignmentOperator]
                            ExprMulti(
                              ExprMulti(
                                ExprSingle(
                                  SignNegative(
                                  ) [SignNegative]
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorIdentifier(
                                       bodovi
                                      ) [DesignatorIdentifier]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                                AdditionOperatorAddition(
                                ) [AdditionOperatorAddition]
                                TermMulti(
                                  TermSingle(
                                    FactorExpr(
                                      ExprMulti(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermMulti(
                                            TermMulti(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorIdentifier(
                                                   pet
                                                  ) [DesignatorIdentifier]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                              MultiplicationOperatorMultiplication(
                                              ) [MultiplicationOperatorMultiplication]
                                              FactorDesignator(
                                                DesignatorIdentifier(
                                                 a
                                                ) [DesignatorIdentifier]
                                              ) [FactorDesignator]
                                            ) [TermMulti]
                                            MultiplicationOperatorDivision(
                                            ) [MultiplicationOperatorDivision]
                                            FactorConstant(
                                              ConstFactorNumber(
                                               2
                                              ) [ConstFactorNumber]
                                            ) [FactorConstant]
                                          ) [TermMulti]
                                        ) [ExprSingle]
                                        AdditionOperatorSubtraction(
                                        ) [AdditionOperatorSubtraction]
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorIdentifier(
                                             jedan
                                            ) [DesignatorIdentifier]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprMulti]
                                    ) [FactorExpr]
                                  ) [TermSingle]
                                  MultiplicationOperatorMultiplication(
                                  ) [MultiplicationOperatorMultiplication]
                                  FactorDesignator(
                                    DesignatorIdentifier(
                                     bodovi
                                    ) [DesignatorIdentifier]
                                  ) [FactorDesignator]
                                ) [TermMulti]
                              ) [ExprMulti]
                              AdditionOperatorSubtraction(
                              ) [AdditionOperatorSubtraction]
                              TermSingle(
                                FactorExpr(
                                  ExprMulti(
                                    ExprMulti(
                                      ExprSingle(
                                        SignEpsilon(
                                        ) [SignEpsilon]
                                        TermMulti(
                                          TermSingle(
                                            FactorConstant(
                                              ConstFactorNumber(
                                               3
                                              ) [ConstFactorNumber]
                                            ) [FactorConstant]
                                          ) [TermSingle]
                                          MultiplicationOperatorModulo(
                                          ) [MultiplicationOperatorModulo]
                                          FactorConstant(
                                            ConstFactorNumber(
                                             2
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermMulti]
                                      ) [ExprSingle]
                                      AdditionOperatorAddition(
                                      ) [AdditionOperatorAddition]
                                      TermMulti(
                                        TermSingle(
                                          FactorConstant(
                                            ConstFactorNumber(
                                             3
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermSingle]
                                        MultiplicationOperatorMultiplication(
                                        ) [MultiplicationOperatorMultiplication]
                                        FactorConstant(
                                          ConstFactorNumber(
                                           2
                                          ) [ConstFactorNumber]
                                        ) [FactorConstant]
                                      ) [TermMulti]
                                    ) [ExprMulti]
                                    AdditionOperatorSubtraction(
                                    ) [AdditionOperatorSubtraction]
                                    TermSingle(
                                      FactorConstant(
                                        ConstFactorNumber(
                                         3
                                        ) [ConstFactorNumber]
                                      ) [FactorConstant]
                                    ) [TermSingle]
                                  ) [ExprMulti]
                                ) [FactorExpr]
                              ) [TermSingle]
                            ) [ExprMulti]
                          ) [AssignmentOperationExpr]
                        ) [DesignatorStatementAssignment]
                      ) [StatementDesignator]
                    ) [StatementListMulti]
                    StatementPrint(
                      ExprSingle(
                        SignEpsilon(
                        ) [SignEpsilon]
                        TermSingle(
                          FactorDesignator(
                            DesignatorIdentifier(
                             bodovi
                            ) [DesignatorIdentifier]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      MaybePrintWidthEpsilon(
                      ) [MaybePrintWidthEpsilon]
                    ) [StatementPrint]
                  ) [StatementListMulti]
                  StatementPrint(
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorDesignator(
                          DesignatorElementAccess(
                            DesignatorIdentifier(
                             nizch
                            ) [DesignatorIdentifier]
                            ArrayElement(
                              ExprSingle(
                                SignEpsilon(
                                ) [SignEpsilon]
                                TermSingle(
                                  FactorConstant(
                                    ConstFactorNumber(
                                     1
                                    ) [ConstFactorNumber]
                                  ) [FactorConstant]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ArrayElement]
                          ) [DesignatorElementAccess]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    MaybePrintWidthEpsilon(
                    ) [MaybePrintWidthEpsilon]
                  ) [StatementPrint]
                ) [StatementListMulti]
                StatementDesignator(
                  DesignatorStatementAssignment(
                    DesignatorElementAccess(
                      DesignatorIdentifier(
                       niz
                      ) [DesignatorIdentifier]
                      ArrayElement(
                        ExprSingle(
                          SignEpsilon(
                          ) [SignEpsilon]
                          TermSingle(
                            FactorConstant(
                              ConstFactorNumber(
                               2
                              ) [ConstFactorNumber]
                            ) [FactorConstant]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ArrayElement]
                    ) [DesignatorElementAccess]
                    AssignmentOperationExpr(
                      AssignmentOperator(
                      ) [AssignmentOperator]
                      ExprSingle(
                        SignEpsilon(
                        ) [SignEpsilon]
                        TermSingle(
                          FactorConstant(
                            ConstFactorNumber(
                             5
                            ) [ConstFactorNumber]
                          ) [FactorConstant]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [AssignmentOperationExpr]
                  ) [DesignatorStatementAssignment]
                ) [StatementDesignator]
              ) [StatementListMulti]
              StatementDesignator(
                DesignatorStatementAssignment(
                  DesignatorIdentifier(
                   bodovi
                  ) [DesignatorIdentifier]
                  AssignmentOperationExpr(
                    AssignmentOperator(
                    ) [AssignmentOperator]
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorFunctionInvocation(
                          FunctionInvocationHeader(
                            DesignatorIdentifier(
                             sum
                            ) [DesignatorIdentifier]
                          ) [FunctionInvocationHeader]
                          FunctionInvocation(
                            MaybeActParsIsActPars(
                              ActParsMulti(
                                ActParsSingle(
                                  ActualParameter(
                                    ExprSingle(
                                      SignEpsilon(
                                      ) [SignEpsilon]
                                      TermSingle(
                                        FactorFunctionInvocation(
                                          FunctionInvocationHeader(
                                            DesignatorIdentifier(
                                             sum
                                            ) [DesignatorIdentifier]
                                          ) [FunctionInvocationHeader]
                                          FunctionInvocation(
                                            MaybeActParsIsActPars(
                                              ActParsMulti(
                                                ActParsSingle(
                                                  ActualParameter(
                                                    ExprSingle(
                                                      SignEpsilon(
                                                      ) [SignEpsilon]
                                                      TermSingle(
                                                        FactorConstant(
                                                          ConstFactorNumber(
                                                           4
                                                          ) [ConstFactorNumber]
                                                        ) [FactorConstant]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ActualParameter]
                                                ) [ActParsSingle]
                                                ActualParameter(
                                                  ExprSingle(
                                                    SignEpsilon(
                                                    ) [SignEpsilon]
                                                    TermSingle(
                                                      FactorConstant(
                                                        ConstFactorNumber(
                                                         5
                                                        ) [ConstFactorNumber]
                                                      ) [FactorConstant]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActualParameter]
                                              ) [ActParsMulti]
                                            ) [MaybeActParsIsActPars]
                                          ) [FunctionInvocation]
                                        ) [FactorFunctionInvocation]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ActualParameter]
                                ) [ActParsSingle]
                                ActualParameter(
                                  ExprSingle(
                                    SignEpsilon(
                                    ) [SignEpsilon]
                                    TermSingle(
                                      FactorFunctionInvocation(
                                        FunctionInvocationHeader(
                                          DesignatorIdentifier(
                                           sum
                                          ) [DesignatorIdentifier]
                                        ) [FunctionInvocationHeader]
                                        FunctionInvocation(
                                          MaybeActParsIsActPars(
                                            ActParsMulti(
                                              ActParsSingle(
                                                ActualParameter(
                                                  ExprSingle(
                                                    SignEpsilon(
                                                    ) [SignEpsilon]
                                                    TermSingle(
                                                      FactorConstant(
                                                        ConstFactorNumber(
                                                         4
                                                        ) [ConstFactorNumber]
                                                      ) [FactorConstant]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActualParameter]
                                              ) [ActParsSingle]
                                              ActualParameter(
                                                ExprSingle(
                                                  SignEpsilon(
                                                  ) [SignEpsilon]
                                                  TermSingle(
                                                    FactorConstant(
                                                      ConstFactorNumber(
                                                       5
                                                      ) [ConstFactorNumber]
                                                    ) [FactorConstant]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ActualParameter]
                                            ) [ActParsMulti]
                                          ) [MaybeActParsIsActPars]
                                        ) [FunctionInvocation]
                                      ) [FactorFunctionInvocation]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ActualParameter]
                              ) [ActParsMulti]
                            ) [MaybeActParsIsActPars]
                          ) [FunctionInvocation]
                        ) [FactorFunctionInvocation]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [AssignmentOperationExpr]
                ) [DesignatorStatementAssignment]
              ) [StatementDesignator]
            ) [StatementListMulti]
            StatementWhile(
              StatementWhileHeader(
              ) [StatementWhileHeader]
              ConditionSingle(
                CondTermSingle(
                  CondFactMulti(
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorConstant(
                          ConstFactorNumber(
                           2
                          ) [ConstFactorNumber]
                        ) [FactorConstant]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelationalOperatorGreaterThan(
                    ) [RelationalOperatorGreaterThan]
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorConstant(
                          ConstFactorNumber(
                           1
                          ) [ConstFactorNumber]
                        ) [FactorConstant]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMulti]
                ) [CondTermSingle]
              ) [ConditionSingle]
              StatementBlock(
                StatementListMulti(
                  StatementListEpsilon(
                  ) [StatementListEpsilon]
                  StatementBreak(
                  ) [StatementBreak]
                ) [StatementListMulti]
              ) [StatementBlock]
            ) [StatementWhile]
          ) [StatementListMulti]
          StatementForEach(
            StatementForEachHeader(
              DesignatorIdentifier(
               niz
              ) [DesignatorIdentifier]
            ) [StatementForEachHeader]
            StatementForEachDesignator(
             bodovi
            ) [StatementForEachDesignator]
            StatementBlock(
              StatementListMulti(
                StatementListEpsilon(
                ) [StatementListEpsilon]
                StatementPrint(
                  ExprSingle(
                    SignEpsilon(
                    ) [SignEpsilon]
                    TermSingle(
                      FactorDesignator(
                        DesignatorIdentifier(
                         bodovi
                        ) [DesignatorIdentifier]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  MaybePrintWidthEpsilon(
                  ) [MaybePrintWidthEpsilon]
                ) [StatementPrint]
              ) [StatementListMulti]
            ) [StatementBlock]
          ) [StatementForEach]
        ) [StatementListMulti]
        StatementDesignator(
          DesignatorStatementUnpack(
            DesignatorStatementUnpackHeader(
            ) [DesignatorStatementUnpackHeader]
            DesignatorListMulti(
              DesignatorListMulti(
                DesignatorListSingle(
                  MaybeDesignatorIsDesignator(
                    DesignatorIdentifier(
                     a
                    ) [DesignatorIdentifier]
                  ) [MaybeDesignatorIsDesignator]
                ) [DesignatorListSingle]
                MaybeDesignatorEpsilon(
                ) [MaybeDesignatorEpsilon]
              ) [DesignatorListMulti]
              MaybeDesignatorIsDesignator(
                DesignatorIdentifier(
                 b
                ) [DesignatorIdentifier]
              ) [MaybeDesignatorIsDesignator]
            ) [DesignatorListMulti]
            DesignatorStatementIntermezzo(
              AssignmentOperator(
              ) [AssignmentOperator]
            ) [DesignatorStatementIntermezzo]
            DesignatorIdentifier(
             niz
            ) [DesignatorIdentifier]
          ) [DesignatorStatementUnpack]
        ) [StatementDesignator]
      ) [StatementListMulti]
    ) [MethodDeclaration]
  ) [MethodDeclarationListMulti]
) [Program]
2023-01-13 05:30:02.528 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:84)] - ===================================
2023-01-13 05:30:02.534 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:88)] - ===================================
2023-01-13 05:30:02.537 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #5] Traversing syntax node Type.
2023-01-13 05:30:02.537 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #5] Traversing syntax node ConstAssignment.
2023-01-13 05:30:02.537 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.visit(SemanticAnalyzer.java:275)] - Basic type constant declaration!
2023-01-13 05:30:02.538 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #5] Declared constant nula of type int and value 0.
2023-01-13 05:30:02.538 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #6] Traversing syntax node Type.
2023-01-13 05:30:02.538 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #6] Traversing syntax node ConstAssignment.
2023-01-13 05:30:02.538 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.visit(SemanticAnalyzer.java:275)] - Basic type constant declaration!
2023-01-13 05:30:02.538 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #6] Declared constant jedan of type int and value 1.
2023-01-13 05:30:02.538 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node Type.
2023-01-13 05:30:02.538 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ConstAssignment.
2023-01-13 05:30:02.538 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.visit(SemanticAnalyzer.java:275)] - Basic type constant declaration!
2023-01-13 05:30:02.538 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #7] Declared constant pet of type int and value 5.
2023-01-13 05:30:02.538 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node Type.
2023-01-13 05:30:02.539 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.539 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #9] Declared global variable niz of type int[].
2023-01-13 05:30:02.539 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.539 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #9] Declared global variable niz2 of type int[].
2023-01-13 05:30:02.539 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.539 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #9] Declared global variable a of type int.
2023-01-13 05:30:02.539 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.539 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #9] Declared global variable b of type int.
2023-01-13 05:30:02.539 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #10] Traversing syntax node Type.
2023-01-13 05:30:02.539 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #10] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.540 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #10] Declared global variable nizch of type char[].
2023-01-13 05:30:02.540 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node Type.
2023-01-13 05:30:02.540 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node ReturnTypeNonVoid.
2023-01-13 05:30:02.540 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:30:02.540 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node Type.
2023-01-13 05:30:02.540 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node FormalParameter.
2023-01-13 05:30:02.540 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #15] Declared formal parameter z of type int.
2023-01-13 05:30:02.540 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node Type.
2023-01-13 05:30:02.540 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node FormalParameter.
2023-01-13 05:30:02.541 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #15] Declared formal parameter d of type int.
2023-01-13 05:30:02.541 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node Type.
2023-01-13 05:30:02.541 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node LocalVariableDeclaration.
2023-01-13 05:30:02.541 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #15] Declared global variable temp of type int.
2023-01-13 05:30:02.541 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.541 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #17] Detected symbol usage. Name temp, symbol type local variable. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:30:02.541 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.542 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #17] Detected symbol usage. Name z, symbol type formal parameter. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.542 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.542 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node TermSingle.
2023-01-13 05:30:02.542 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #10] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.542 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.542 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #17] Detected symbol usage. Name d, symbol type formal parameter. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:30:02.542 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.542 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node TermSingle.
2023-01-13 05:30:02.542 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #10] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.543 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.544 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #18] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.544 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #18] Detected symbol usage. Name temp, symbol type local variable. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:30:02.544 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #18] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.544 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #18] Traversing syntax node TermSingle.
2023-01-13 05:30:02.544 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #2] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #2] Traversing syntax node StatementReturn.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node MethodDeclaration.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node Type.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node ReturnTypeNonVoid.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node Type.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node FormalParameter.
2023-01-13 05:30:02.545 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #20] Declared formal parameter zz of type char.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node Type.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node FormalParameter.
2023-01-13 05:30:02.545 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #20] Declared formal parameter dd of type char.
2023-01-13 05:30:02.545 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.546 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #21] Detected symbol usage. Name zz, symbol type formal parameter. Symbol {name zz, kind Var, type char, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node TermSingle.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #8] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #8] Traversing syntax node StatementReturn.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node MethodDeclaration.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node ReturnTypeVoid.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #24] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #25] Traversing syntax node Type.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #25] Traversing syntax node LocalVariableDeclaration.
2023-01-13 05:30:02.546 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #25] Declared global variable bodovi of type int.
2023-01-13 05:30:02.546 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #26] Traversing syntax node Type.
2023-01-13 05:30:02.547 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #26] Traversing syntax node LocalVariableDeclaration.
2023-01-13 05:30:02.547 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #26] Declared global variable bt of type bool.
2023-01-13 05:30:02.547 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #28] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.547 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #28] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.547 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #28] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.547 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #28] Traversing syntax node TermSingle.
2023-01-13 05:30:02.547 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.547 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #28] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.547 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #29] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.547 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #29] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.548 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #29] Traversing syntax node DesignatorStatementIncrement.
2023-01-13 05:30:02.549 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.550 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #30] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.550 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.550 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #30] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.550 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.550 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node TermSingle.
2023-01-13 05:30:02.550 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.550 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.551 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #30] Detected symbol usage. Name jedan, symbol type symbolic constant. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.551 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.551 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node TermSingle.
2023-01-13 05:30:02.551 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.551 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.551 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.551 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #31] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.551 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.552 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #31] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.552 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.552 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node TermSingle.
2023-01-13 05:30:02.552 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.552 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #31] Detected symbol usage. Name pet, symbol type symbolic constant. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.552 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.552 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node TermMulti.
2023-01-13 05:30:02.553 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.553 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.553 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #32] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.553 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #32] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.553 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #32] Traversing syntax node DesignatorStatementDecrement.
2023-01-13 05:30:02.553 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.554 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #33] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node TermSingle.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.554 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #37] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node Type.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node TermSingle.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #18] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node FactorNewArray.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node TermSingle.
2023-01-13 05:30:02.554 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #8] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.555 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #38] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node TermSingle.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.555 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #38] Detected symbol usage. Name nizch[0], symbol type array element access. Symbol {name nizch[0], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node TermSingle.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.555 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.556 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #39] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.556 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #39] Detected symbol usage. Name jedan, symbol type symbolic constant. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node TermSingle.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.556 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #39] Detected symbol usage. Name nizch[jedan], symbol type array element access. Symbol {name nizch[jedan], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node TermSingle.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.556 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.556 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #40] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.557 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #40] Detected symbol usage. Name pet, symbol type symbolic constant. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.557 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #40] Detected symbol usage. Name nizch[pet - 3], symbol type array element access. Symbol {name nizch[pet - 3], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.557 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.558 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #41] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node TermSingle.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.558 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #41] Detected symbol usage. Name nizch[1], symbol type array element access. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node TermSingle.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.558 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.558 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #42] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.559 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #42] Detected symbol usage. Name jedan, symbol type symbolic constant. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node TermSingle.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node TermMulti.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.559 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #42] Detected symbol usage. Name nizch[jedan * 2], symbol type array element access. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node TermSingle.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.559 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #45] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.560 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #45] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #45] Traversing syntax node StatementRead.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.560 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.560 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.560 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name pet, symbol type symbolic constant. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.560 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.561 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.561 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name a, symbol type global variable. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:30:02.561 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.561 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.561 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.561 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.561 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.561 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.561 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name jedan, symbol type symbolic constant. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.561 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.561 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.562 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.562 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node FactorExpr.
2023-01-13 05:30:02.562 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.562 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.562 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.562 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.562 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.562 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.563 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node FactorExpr.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #47] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.564 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #47] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #47] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #47] Traversing syntax node TermSingle.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.564 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #51] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node TermSingle.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #19] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.564 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #51] Detected symbol usage. Name nizch[1], symbol type array element access. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.564 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node TermSingle.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.565 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #54] Detected symbol usage. Name niz, symbol type global variable. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node TermSingle.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.565 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #54] Detected symbol usage. Name niz[2], symbol type array element access. Symbol {name niz[2], kind Elem, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node TermSingle.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.565 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.566 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #65] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.566 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.566 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #65] Detected symbol usage. Name sum, symbol type global function call. Symbol {name sum, kind Meth, type int, level 2, fpPos 0, adr 0}.
2023-01-13 05:30:02.566 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.566 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #65] Detected symbol usage. Name sum, symbol type global function call. Symbol {name sum, kind Meth, type int, level 2, fpPos 0, adr 0}.
2023-01-13 05:30:02.566 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.566 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.566 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.566 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node ActualParameter.
2023-01-13 05:30:02.566 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.566 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.567 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #23] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.567 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #23] Traversing syntax node ActualParameter.
2023-01-13 05:30:02.567 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorFunctionInvocation.
2023-01-13 05:30:02.567 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.567 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:30:02.567 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Skipping local symbol. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:30:02.570 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:30:02.570 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.571 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.571 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.571 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node ActualParameter.
2023-01-13 05:30:02.571 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.571 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #65] Detected symbol usage. Name sum, symbol type global function call. Symbol {name sum, kind Meth, type int, level 2, fpPos 0, adr 0}.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node ActualParameter.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node ActualParameter.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorFunctionInvocation.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Skipping local symbol. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #26] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.572 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #26] Traversing syntax node ActualParameter.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorFunctionInvocation.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Skipping local symbol. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name sum(4, 5), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name sum(4, 5), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node StatementWhileHeader.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node TermSingle.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node TermSingle.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #11] Traversing syntax node CondFactMulti.
2023-01-13 05:30:02.573 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node StatementBreak.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node StatementWhile.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #70] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.574 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #70] Detected symbol usage. Name niz, symbol type global variable. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #70] Traversing syntax node StatementForEachHeader.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #70] Traversing syntax node StatementForEachDesignator.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #73] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.574 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #73] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #73] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #73] Traversing syntax node TermSingle.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #70] Traversing syntax node StatementForEach.
2023-01-13 05:30:02.574 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node DesignatorStatementUnpackHeader.
2023-01-13 05:30:02.575 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.575 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #86] Detected symbol usage. Name a, symbol type global variable. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:30:02.575 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node MaybeDesignatorIsDesignator.
2023-01-13 05:30:02.575 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node MaybeDesignatorEpsilon.
2023-01-13 05:30:02.575 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.575 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #86] Detected symbol usage. Name b, symbol type global variable. Symbol {name b, kind Var, type int, level 0, fpPos -1, adr 3}.
2023-01-13 05:30:02.575 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node MaybeDesignatorIsDesignator.
2023-01-13 05:30:02.575 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorStatementIntermezzo.
2023-01-13 05:30:02.575 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.575 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #86] Detected symbol usage. Name niz, symbol type global variable. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:30:02.576 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorStatementUnpack.
2023-01-13 05:30:02.576 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Detected unpack statement LHS designator. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:30:02.576 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Detected unpack statement LHS designator. Symbol {null}.
2023-01-13 05:30:02.576 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Detected unpack statement LHS designator. Symbol {name b, kind Var, type int, level 0, fpPos -1, adr 3}.
2023-01-13 05:30:02.576 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Detected unpack statement RHS designator. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:30:02.576 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #24] Traversing syntax node MethodDeclaration.
2023-01-13 05:30:02.576 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:102)] - Declared #3 const variables.
2023-01-13 05:30:02.576 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:103)] - Declared #5 global variables.
2023-01-13 05:30:02.576 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:104)] - Declared #3 local variables.
2023-01-13 05:30:02.576 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:106)] - No semantic error detected. Proceeding with code generation.
2023-01-13 05:30:02.580 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #3] Traversing syntax node ProgramName.
2023-01-13 05:30:02.580 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Added global variable to StaticData memory section. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Added global variable to StaticData memory section. Symbol {name niz2, kind Var, type Arr of int, level 0, fpPos -1, adr 1}.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Added global variable to StaticData memory section. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Added global variable to StaticData memory section. Symbol {name b, kind Var, type int, level 0, fpPos -1, adr 3}.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Traversing syntax node VariableDeclaration.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Added global variable to StaticData memory section. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.581 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Generated enter instruction for method sum, level 2, symbolCount 3.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Propagating Designator symbol to FactorDesignator. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Loading designator. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node TermSingle.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Propagating Factor symbol to TermSingle. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Propagating Designator symbol to FactorDesignator. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Loading designator. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node TermSingle.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Propagating Factor symbol to TermSingle. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:30:02.582 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.583 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Generating addition operation. [ + ]
2023-01-13 05:30:02.583 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.583 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Storing value to designator (assignment). Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:30:02.583 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.583 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.583 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Propagating Designator symbol to FactorDesignator. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:30:02.583 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Loading designator. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:30:02.583 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Traversing syntax node TermSingle.
2023-01-13 05:30:02.583 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Propagating Factor symbol to TermSingle. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #2] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #2] Traversing syntax node StatementReturn.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #2] Return statement.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Traversing syntax node MethodDeclaration.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Generating trap instruction to make sure we have a runtime error if we do not return properly from a method which has a return value.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #20] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #20] Generated enter instruction for method sumC, level 2, symbolCount 2.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Propagating Designator symbol to FactorDesignator. Symbol {name zz, kind Var, type char, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Loading designator. Symbol {name zz, kind Var, type char, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node TermSingle.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Propagating Factor symbol to TermSingle. Symbol {name zz, kind Var, type char, level 1, fpPos 0, adr 0}.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #8] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #8] Traversing syntax node StatementReturn.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #8] Return statement.
2023-01-13 05:30:02.584 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #20] Traversing syntax node MethodDeclaration.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #20] Generating trap instruction to make sure we have a runtime error if we do not return properly from a method which has a return value.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #24] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #24] Detected mainPc = 39.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #24] Generated enter instruction for method main, level 0, symbolCount 2.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Loading constant factor. Symbol {name 0, kind Con, type int, level 0, fpPos 0, adr 0}.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Traversing syntax node TermSingle.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Propagating Factor symbol to TermSingle. Symbol {name 0, kind Con, type int, level 0, fpPos 0, adr 0}.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #29] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #29] Traversing syntax node DesignatorStatementIncrement.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #29] Incrementing designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.585 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.586 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.586 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.586 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node TermSingle.
2023-01-13 05:30:02.586 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.586 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Propagating Designator symbol to FactorDesignator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Loading designator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node TermSingle.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Propagating Factor symbol to TermSingle. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Generating addition operation. [ + ]
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node TermSingle.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.587 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Propagating Designator symbol to FactorDesignator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Loading designator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node TermMulti.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Generating multiplication operation. [ * ]
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #32] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #32] Traversing syntax node DesignatorStatementDecrement.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #32] Decrementing designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Traversing syntax node TermSingle.
2023-01-13 05:30:02.588 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Printing expr. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node TermSingle.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node FactorNewArray.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Allocating new array. Symbol {name dummy, kind Var, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node TermSingle.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Propagating Factor symbol to TermSingle. Symbol {name , kind Con, type Arr of char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #8] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Storing value to designator (assignment). Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.589 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Loading constant factor. Symbol {name 0, kind Con, type int, level 0, fpPos 0, adr 0}.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node TermSingle.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Propagating Factor symbol to TermSingle. Symbol {name 0, kind Con, type int, level 0, fpPos 0, adr 0}.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Loading constant factor. Symbol {name a, kind Con, type char, level 0, fpPos 0, adr 97}.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node TermSingle.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Propagating Factor symbol to TermSingle. Symbol {name a, kind Con, type char, level 0, fpPos 0, adr 97}.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Storing value to designator (assignment). Symbol {name nizch[0], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Propagating Designator symbol to FactorDesignator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Loading designator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node TermSingle.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Propagating Factor symbol to TermSingle. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.590 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Loading constant factor. Symbol {name b, kind Con, type char, level 0, fpPos 0, adr 98}.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node TermSingle.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Propagating Factor symbol to TermSingle. Symbol {name b, kind Con, type char, level 0, fpPos 0, adr 98}.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Storing value to designator (assignment). Symbol {name nizch[jedan], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Propagating Designator symbol to FactorDesignator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Loading designator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Propagating Factor symbol to TermSingle. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.591 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Generating addition operation. [ - ]
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Loading constant factor. Symbol {name c, kind Con, type char, level 0, fpPos 0, adr 99}.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Propagating Factor symbol to TermSingle. Symbol {name c, kind Con, type char, level 0, fpPos 0, adr 99}.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Storing value to designator (assignment). Symbol {name nizch[pet - 3], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Loading constant factor. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node TermSingle.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Propagating Factor symbol to TermSingle. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Propagating Designator symbol to FactorDesignator. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Loading designator. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node TermSingle.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Propagating Factor symbol to TermSingle. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.592 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Printing expr. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Propagating Designator symbol to FactorDesignator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Loading designator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node TermSingle.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Propagating Factor symbol to TermSingle. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node TermMulti.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Generating multiplication operation. [ * ]
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.593 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Propagating Designator symbol to FactorDesignator. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Loading designator. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node TermSingle.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Propagating Factor symbol to TermSingle. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Printing expr. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #45] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #45] Traversing syntax node StatementRead.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #45] Reading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating instruction for negation since Sign is SignNegative.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.594 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ * ]
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ / ]
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.595 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Generating addition operation. [ - ]
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name pet * a / 2 - jedan, kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ * ]
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating addition operation. [ + ]
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ % ]
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.596 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ * ]
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Generating addition operation. [ + ]
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Generating addition operation. [ - ]
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name 3 % 2 + 3 * 2 - 3, kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node ExprMulti.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating addition operation. [ - ]
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Traversing syntax node TermSingle.
2023-01-13 05:30:02.597 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Printing expr. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Loading constant factor. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node TermSingle.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Propagating Factor symbol to TermSingle. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #19] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node FactorDesignator.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Propagating Designator symbol to FactorDesignator. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Loading designator. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node TermSingle.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Propagating Factor symbol to TermSingle. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node StatementPrint.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Printing expr. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Loading designator for array element access. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node TermSingle.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Propagating Factor symbol to TermSingle. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.598 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Loading constant factor. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node TermSingle.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Propagating Factor symbol to TermSingle. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Storing value to designator (assignment). Symbol {name niz[2], kind Elem, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Loading constant factor. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Loading constant factor. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.599 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #23] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node FunctionInvocation.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name sum(4, 5), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Loading constant factor. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Loading constant factor. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node FunctionInvocation.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name sum(4, 5), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #26] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.600 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node FunctionInvocation.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name sum(sum(4, 5), sum(4, 5)), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Traversing syntax node TermSingle.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Propagating Factor symbol to TermSingle. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Traversing syntax node FactorConstant.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Loading constant factor. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Traversing syntax node TermSingle.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Propagating Factor symbol to TermSingle. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:30:02.601 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node CondFactMulti.
2023-01-13 05:30:02.603 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Performing relational operation. Symbol {name 2 > 1, kind Con, type bool, level -1, fpPos 0, adr 4}.
2023-01-13 05:30:02.603 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node CondTermSingle.
2023-01-13 05:30:02.603 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Propagating CondFact symbol to CondTermSingle. Symbol {name 2 > 1, kind Con, type bool, level -1, fpPos 0, adr 4}.
2023-01-13 05:30:02.603 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node ConditionSingle.
2023-01-13 05:30:02.603 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Propagating CondTerm symbol to ConditionSingle. Symbol {name 2 > 1, kind Con, type bool, level -1, fpPos 0, adr 4}.
2023-01-13 05:30:02.603 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #0] Traversing syntax node StatementBreak.
2023-01-13 05:30:02.603 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #0] Adding break statement address jump.
2023-01-13 05:31:13.715 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\a.mj
2023-01-13 05:31:13.717 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko.mj
2023-01-13 05:31:13.717 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko2.mj
2023-01-13 05:31:13.717 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\program.mj
2023-01-13 05:31:13.717 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test1312.mj
2023-01-13 05:31:13.717 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test300.mj
2023-01-13 05:31:13.717 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test301.mj
2023-01-13 05:31:13.717 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test302.mj
2023-01-13 05:31:13.717 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test303.mj
2023-01-13 05:31:13.718 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test420.mj
2023-01-13 05:31:13.718 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test666.mj
2023-01-13 05:31:13.718 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:53)] - Parsing source file: D:\ETF\13E114PP1\git\MJCompiler\src\test\resources\test999.mj
2023-01-13 05:31:13.760 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 3: Parsed symbol: program - PROGRAM
2023-01-13 05:31:13.760 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 3: Parsed symbol: test301 - IDENTIFIER
2023-01-13 05:31:13.760 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: const - CONST
2023-01-13 05:31:13.761 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: int - IDENTIFIER
2023-01-13 05:31:13.761 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: nula - IDENTIFIER
2023-01-13 05:31:13.762 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.762 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 05:31:13.763 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 5: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.764 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: const - CONST
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: int - IDENTIFIER
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: const - CONST
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: int - IDENTIFIER
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.765 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:31:13.766 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 7: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.766 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: int - IDENTIFIER
2023-01-13 05:31:13.766 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:31:13.766 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.766 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.766 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: , - COMMA
2023-01-13 05:31:13.767 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: niz2 - IDENTIFIER
2023-01-13 05:31:13.767 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.767 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.767 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: , - COMMA
2023-01-13 05:31:13.767 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: a - IDENTIFIER
2023-01-13 05:31:13.767 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: , - COMMA
2023-01-13 05:31:13.768 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: b - IDENTIFIER
2023-01-13 05:31:13.768 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.768 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: char - IDENTIFIER
2023-01-13 05:31:13.769 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:31:13.769 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.769 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.769 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 10: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.769 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:31:13.769 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:31:13.769 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:31:13.770 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.770 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:31:13.770 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: z - IDENTIFIER
2023-01-13 05:31:13.770 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: , - COMMA
2023-01-13 05:31:13.771 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:31:13.771 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: d - IDENTIFIER
2023-01-13 05:31:13.771 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.771 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: int - IDENTIFIER
2023-01-13 05:31:13.771 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: temp - IDENTIFIER
2023-01-13 05:31:13.771 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.772 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:31:13.773 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: temp - IDENTIFIER
2023-01-13 05:31:13.773 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.773 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: z - IDENTIFIER
2023-01-13 05:31:13.773 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: + - ADDITION
2023-01-13 05:31:13.774 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: d - IDENTIFIER
2023-01-13 05:31:13.774 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.775 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 18: Parsed symbol: return - RETURN
2023-01-13 05:31:13.775 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 18: Parsed symbol: temp - IDENTIFIER
2023-01-13 05:31:13.775 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 18: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.775 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:31:13.775 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: char - IDENTIFIER
2023-01-13 05:31:13.776 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: sumC - IDENTIFIER
2023-01-13 05:31:13.776 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.776 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: char - IDENTIFIER
2023-01-13 05:31:13.776 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: zz - IDENTIFIER
2023-01-13 05:31:13.776 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: , - COMMA
2023-01-13 05:31:13.776 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: char - IDENTIFIER
2023-01-13 05:31:13.777 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: dd - IDENTIFIER
2023-01-13 05:31:13.777 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.777 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 20: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:31:13.777 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: return - RETURN
2023-01-13 05:31:13.777 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: zz - IDENTIFIER
2023-01-13 05:31:13.777 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.777 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 22: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:31:13.777 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: void - VOID
2023-01-13 05:31:13.777 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: main - IDENTIFIER
2023-01-13 05:31:13.778 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.778 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.778 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: int - IDENTIFIER
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 26: Parsed symbol: bool - IDENTIFIER
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 26: Parsed symbol: bt - IDENTIFIER
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 26: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 27: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 05:31:13.780 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.781 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 29: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.781 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 29: Parsed symbol: ++ - INCREMENT
2023-01-13 05:31:13.781 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 29: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.781 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.781 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.781 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.781 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: + - ADDITION
2023-01-13 05:31:13.781 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:31:13.781 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 30: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.782 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.782 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.782 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.782 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:31:13.782 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:31:13.783 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 31: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.783 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 32: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.783 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 32: Parsed symbol: -- - DECREMENT
2023-01-13 05:31:13.783 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 32: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.783 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: print - PRINT
2023-01-13 05:31:13.783 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.784 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.784 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.784 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 33: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.785 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:31:13.785 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.785 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: new - NEW
2023-01-13 05:31:13.785 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: char - IDENTIFIER
2023-01-13 05:31:13.785 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.785 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:31:13.785 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.785 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 37: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.786 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:31:13.786 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.786 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 05:31:13.786 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.786 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.786 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: a - CONST_CHARACTER
2023-01-13 05:31:13.786 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 38: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.786 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: b - CONST_CHARACTER
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 39: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:31:13.787 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: - - SUBTRACTION
2023-01-13 05:31:13.788 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:31:13.788 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.788 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.788 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: c - CONST_CHARACTER
2023-01-13 05:31:13.788 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 40: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.788 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: print - PRINT
2023-01-13 05:31:13.788 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.788 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 41: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: print - PRINT
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.789 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 42: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: read - READ
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 45: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:31:13.790 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.791 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: + - ADDITION
2023-01-13 05:31:13.791 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.791 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: pet - IDENTIFIER
2023-01-13 05:31:13.791 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:31:13.791 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: a - IDENTIFIER
2023-01-13 05:31:13.791 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: / - DIVISION
2023-01-13 05:31:13.791 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: jedan - IDENTIFIER
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: % - MODULO
2023-01-13 05:31:13.792 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: + - ADDITION
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: * - MULTIPLICATION
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: - - SUBTRACTION
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 46: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: print - PRINT
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 47: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: print - PRINT
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: nizch - IDENTIFIER
2023-01-13 05:31:13.793 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 51: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 54: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:31:13.794 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.795 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:31:13.795 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.795 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: 4 - CONST_NUMBER
2023-01-13 05:31:13.795 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: , - COMMA
2023-01-13 05:31:13.796 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:31:13.796 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.796 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: , - COMMA
2023-01-13 05:31:13.796 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: sum - IDENTIFIER
2023-01-13 05:31:13.796 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: 4 - CONST_NUMBER
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: , - COMMA
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: 5 - CONST_NUMBER
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 65: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: while - WHILE
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 05:31:13.797 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: > - GREATER_THAN
2023-01-13 05:31:13.798 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 05:31:13.798 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.799 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 67: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:31:13.799 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 68: Parsed symbol: break - BREAK
2023-01-13 05:31:13.799 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 68: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.799 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 69: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:31:13.799 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:31:13.800 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: . - DOT
2023-01-13 05:31:13.800 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: foreach - FOR_EACH
2023-01-13 05:31:13.800 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.800 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.800 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: => - LAMBDA
2023-01-13 05:31:13.800 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 70: Parsed symbol: { - LEFT_BRACE
2023-01-13 05:31:13.801 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: print - PRINT
2023-01-13 05:31:13.801 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 05:31:13.801 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: bodovi - IDENTIFIER
2023-01-13 05:31:13.801 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.801 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 73: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.801 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 74: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:31:13.801 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 75: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 05:31:13.801 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 75: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.801 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 05:31:13.802 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: a - IDENTIFIER
2023-01-13 05:31:13.802 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: , - COMMA
2023-01-13 05:31:13.802 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: , - COMMA
2023-01-13 05:31:13.803 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: b - IDENTIFIER
2023-01-13 05:31:13.803 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 05:31:13.803 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: = - ASSIGNMENT
2023-01-13 05:31:13.803 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: niz - IDENTIFIER
2023-01-13 05:31:13.804 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 86: Parsed symbol: ; - SEMI_COLON
2023-01-13 05:31:13.804 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 87: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:31:13.804 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 88: Parsed symbol: } - RIGHT_BRACE
2023-01-13 05:31:13.804 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:78)] - No syntax errors detected, parsing completed successfully! :)
2023-01-13 05:31:13.809 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:83)] - Program(
  ProgramName(
   test301
  ) [ProgramName]
  GlobalDeclarationListMulti(
    GlobalDeclarationListMulti(
      GlobalDeclarationListMulti(
        GlobalDeclarationListMulti(
          GlobalDeclarationListMulti(
            GlobalDeclarationListEpsilon(
            ) [GlobalDeclarationListEpsilon]
            GlobalDeclarationConstDecl(
              ConstDecl(
                Type(
                 int
                ) [Type]
                ConstDeclarationListSingle(
                  ConstAssignment(
                   nula
                    AssignmentOperator(
                    ) [AssignmentOperator]
                    ConstantNumber(
                      SignEpsilon(
                      ) [SignEpsilon]
                     0
                    ) [ConstantNumber]
                  ) [ConstAssignment]
                ) [ConstDeclarationListSingle]
              ) [ConstDecl]
            ) [GlobalDeclarationConstDecl]
          ) [GlobalDeclarationListMulti]
          GlobalDeclarationConstDecl(
            ConstDecl(
              Type(
               int
              ) [Type]
              ConstDeclarationListSingle(
                ConstAssignment(
                 jedan
                  AssignmentOperator(
                  ) [AssignmentOperator]
                  ConstantNumber(
                    SignEpsilon(
                    ) [SignEpsilon]
                   1
                  ) [ConstantNumber]
                ) [ConstAssignment]
              ) [ConstDeclarationListSingle]
            ) [ConstDecl]
          ) [GlobalDeclarationConstDecl]
        ) [GlobalDeclarationListMulti]
        GlobalDeclarationConstDecl(
          ConstDecl(
            Type(
             int
            ) [Type]
            ConstDeclarationListSingle(
              ConstAssignment(
               pet
                AssignmentOperator(
                ) [AssignmentOperator]
                ConstantNumber(
                  SignEpsilon(
                  ) [SignEpsilon]
                 5
                ) [ConstantNumber]
              ) [ConstAssignment]
            ) [ConstDeclarationListSingle]
          ) [ConstDecl]
        ) [GlobalDeclarationConstDecl]
      ) [GlobalDeclarationListMulti]
      GlobalDeclarationVarDecl(
        VarDeclList(
          Type(
           int
          ) [Type]
          VariableDeclarationListMulti(
            VariableDeclarationListMulti(
              VariableDeclarationListMulti(
                VariableDeclarationSingle(
                  VariableDeclaration(
                   niz
                    MaybeArrayIsArray(
                    ) [MaybeArrayIsArray]
                  ) [VariableDeclaration]
                ) [VariableDeclarationSingle]
                VariableDeclaration(
                 niz2
                  MaybeArrayIsArray(
                  ) [MaybeArrayIsArray]
                ) [VariableDeclaration]
              ) [VariableDeclarationListMulti]
              VariableDeclaration(
               a
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [VariableDeclaration]
            ) [VariableDeclarationListMulti]
            VariableDeclaration(
             b
              MaybeArrayEpsilon(
              ) [MaybeArrayEpsilon]
            ) [VariableDeclaration]
          ) [VariableDeclarationListMulti]
        ) [VarDeclList]
      ) [GlobalDeclarationVarDecl]
    ) [GlobalDeclarationListMulti]
    GlobalDeclarationVarDecl(
      VarDeclList(
        Type(
         char
        ) [Type]
        VariableDeclarationSingle(
          VariableDeclaration(
           nizch
            MaybeArrayIsArray(
            ) [MaybeArrayIsArray]
          ) [VariableDeclaration]
        ) [VariableDeclarationSingle]
      ) [VarDeclList]
    ) [GlobalDeclarationVarDecl]
  ) [GlobalDeclarationListMulti]
  MethodDeclarationListMulti(
    MethodDeclarationListMulti(
      MethodDeclarationListMulti(
        MethodDeclarationListEpsilon(
        ) [MethodDeclarationListEpsilon]
        MethodDeclaration(
          MethodDeclarationHeader(
            ReturnTypeNonVoid(
              Type(
               int
              ) [Type]
            ) [ReturnTypeNonVoid]
           sum
          ) [MethodDeclarationHeader]
          MaybeFormParsIsFormPars(
            FormParsMulti(
              FormParsSingle(
                FormalParameter(
                  Type(
                   int
                  ) [Type]
                 z
                  MaybeArrayEpsilon(
                  ) [MaybeArrayEpsilon]
                ) [FormalParameter]
              ) [FormParsSingle]
              FormalParameter(
                Type(
                 int
                ) [Type]
               d
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [FormalParameter]
            ) [FormParsMulti]
          ) [MaybeFormParsIsFormPars]
          LocalVarDeclListMulti(
            LocalVarDeclEpsilon(
            ) [LocalVarDeclEpsilon]
            LocalVarDecl(
              Type(
               int
              ) [Type]
              LocalVariableDeclarationSingle(
                LocalVariableDeclaration(
                 temp
                  MaybeArrayEpsilon(
                  ) [MaybeArrayEpsilon]
                ) [LocalVariableDeclaration]
              ) [LocalVariableDeclarationSingle]
            ) [LocalVarDecl]
          ) [LocalVarDeclListMulti]
          StatementListMulti(
            StatementListMulti(
              StatementListEpsilon(
              ) [StatementListEpsilon]
              StatementDesignator(
                DesignatorStatementAssignment(
                  DesignatorIdentifier(
                   temp
                  ) [DesignatorIdentifier]
                  AssignmentOperationExpr(
                    AssignmentOperator(
                    ) [AssignmentOperator]
                    ExprMulti(
                      ExprSingle(
                        SignEpsilon(
                        ) [SignEpsilon]
                        TermSingle(
                          FactorDesignator(
                            DesignatorIdentifier(
                             z
                            ) [DesignatorIdentifier]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AdditionOperatorAddition(
                      ) [AdditionOperatorAddition]
                      TermSingle(
                        FactorDesignator(
                          DesignatorIdentifier(
                           d
                          ) [DesignatorIdentifier]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprMulti]
                  ) [AssignmentOperationExpr]
                ) [DesignatorStatementAssignment]
              ) [StatementDesignator]
            ) [StatementListMulti]
            StatementReturn(
              MaybeReturnValueIsReturnValue(
                ExprSingle(
                  SignEpsilon(
                  ) [SignEpsilon]
                  TermSingle(
                    FactorDesignator(
                      DesignatorIdentifier(
                       temp
                      ) [DesignatorIdentifier]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [MaybeReturnValueIsReturnValue]
            ) [StatementReturn]
          ) [StatementListMulti]
        ) [MethodDeclaration]
      ) [MethodDeclarationListMulti]
      MethodDeclaration(
        MethodDeclarationHeader(
          ReturnTypeNonVoid(
            Type(
             char
            ) [Type]
          ) [ReturnTypeNonVoid]
         sumC
        ) [MethodDeclarationHeader]
        MaybeFormParsIsFormPars(
          FormParsMulti(
            FormParsSingle(
              FormalParameter(
                Type(
                 char
                ) [Type]
               zz
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [FormalParameter]
            ) [FormParsSingle]
            FormalParameter(
              Type(
               char
              ) [Type]
             dd
              MaybeArrayEpsilon(
              ) [MaybeArrayEpsilon]
            ) [FormalParameter]
          ) [FormParsMulti]
        ) [MaybeFormParsIsFormPars]
        LocalVarDeclEpsilon(
        ) [LocalVarDeclEpsilon]
        StatementListMulti(
          StatementListEpsilon(
          ) [StatementListEpsilon]
          StatementReturn(
            MaybeReturnValueIsReturnValue(
              ExprSingle(
                SignEpsilon(
                ) [SignEpsilon]
                TermSingle(
                  FactorDesignator(
                    DesignatorIdentifier(
                     zz
                    ) [DesignatorIdentifier]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [MaybeReturnValueIsReturnValue]
          ) [StatementReturn]
        ) [StatementListMulti]
      ) [MethodDeclaration]
    ) [MethodDeclarationListMulti]
    MethodDeclaration(
      MethodDeclarationHeader(
        ReturnTypeVoid(
        ) [ReturnTypeVoid]
       main
      ) [MethodDeclarationHeader]
      MaybeFormParsEpsilon(
      ) [MaybeFormParsEpsilon]
      LocalVarDeclListMulti(
        LocalVarDeclListMulti(
          LocalVarDeclEpsilon(
          ) [LocalVarDeclEpsilon]
          LocalVarDecl(
            Type(
             int
            ) [Type]
            LocalVariableDeclarationSingle(
              LocalVariableDeclaration(
               bodovi
                MaybeArrayEpsilon(
                ) [MaybeArrayEpsilon]
              ) [LocalVariableDeclaration]
            ) [LocalVariableDeclarationSingle]
          ) [LocalVarDecl]
        ) [LocalVarDeclListMulti]
        LocalVarDecl(
          Type(
           bool
          ) [Type]
          LocalVariableDeclarationSingle(
            LocalVariableDeclaration(
             bt
              MaybeArrayEpsilon(
              ) [MaybeArrayEpsilon]
            ) [LocalVariableDeclaration]
          ) [LocalVariableDeclarationSingle]
        ) [LocalVarDecl]
      ) [LocalVarDeclListMulti]
      StatementListMulti(
        StatementListMulti(
          StatementListMulti(
            StatementListMulti(
              StatementListMulti(
                StatementListMulti(
                  StatementListMulti(
                    StatementListMulti(
                      StatementListMulti(
                        StatementListMulti(
                          StatementListMulti(
                            StatementListMulti(
                              StatementListMulti(
                                StatementListMulti(
                                  StatementListMulti(
                                    StatementListMulti(
                                      StatementListMulti(
                                        StatementListMulti(
                                          StatementListMulti(
                                            StatementListMulti(
                                              StatementListMulti(
                                                StatementListEpsilon(
                                                ) [StatementListEpsilon]
                                                StatementDesignator(
                                                  DesignatorStatementAssignment(
                                                    DesignatorIdentifier(
                                                     bodovi
                                                    ) [DesignatorIdentifier]
                                                    AssignmentOperationExpr(
                                                      AssignmentOperator(
                                                      ) [AssignmentOperator]
                                                      ExprSingle(
                                                        SignEpsilon(
                                                        ) [SignEpsilon]
                                                        TermSingle(
                                                          FactorConstant(
                                                            ConstFactorNumber(
                                                             0
                                                            ) [ConstFactorNumber]
                                                          ) [FactorConstant]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [AssignmentOperationExpr]
                                                  ) [DesignatorStatementAssignment]
                                                ) [StatementDesignator]
                                              ) [StatementListMulti]
                                              StatementDesignator(
                                                DesignatorStatementIncrement(
                                                  DesignatorIdentifier(
                                                   bodovi
                                                  ) [DesignatorIdentifier]
                                                ) [DesignatorStatementIncrement]
                                              ) [StatementDesignator]
                                            ) [StatementListMulti]
                                            StatementDesignator(
                                              DesignatorStatementAssignment(
                                                DesignatorIdentifier(
                                                 bodovi
                                                ) [DesignatorIdentifier]
                                                AssignmentOperationExpr(
                                                  AssignmentOperator(
                                                  ) [AssignmentOperator]
                                                  ExprMulti(
                                                    ExprSingle(
                                                      SignEpsilon(
                                                      ) [SignEpsilon]
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorIdentifier(
                                                           bodovi
                                                          ) [DesignatorIdentifier]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                    AdditionOperatorAddition(
                                                    ) [AdditionOperatorAddition]
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorIdentifier(
                                                         jedan
                                                        ) [DesignatorIdentifier]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprMulti]
                                                ) [AssignmentOperationExpr]
                                              ) [DesignatorStatementAssignment]
                                            ) [StatementDesignator]
                                          ) [StatementListMulti]
                                          StatementDesignator(
                                            DesignatorStatementAssignment(
                                              DesignatorIdentifier(
                                               bodovi
                                              ) [DesignatorIdentifier]
                                              AssignmentOperationExpr(
                                                AssignmentOperator(
                                                ) [AssignmentOperator]
                                                ExprSingle(
                                                  SignEpsilon(
                                                  ) [SignEpsilon]
                                                  TermMulti(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorIdentifier(
                                                         bodovi
                                                        ) [DesignatorIdentifier]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                    MultiplicationOperatorMultiplication(
                                                    ) [MultiplicationOperatorMultiplication]
                                                    FactorDesignator(
                                                      DesignatorIdentifier(
                                                       pet
                                                      ) [DesignatorIdentifier]
                                                    ) [FactorDesignator]
                                                  ) [TermMulti]
                                                ) [ExprSingle]
                                              ) [AssignmentOperationExpr]
                                            ) [DesignatorStatementAssignment]
                                          ) [StatementDesignator]
                                        ) [StatementListMulti]
                                        StatementDesignator(
                                          DesignatorStatementDecrement(
                                            DesignatorIdentifier(
                                             bodovi
                                            ) [DesignatorIdentifier]
                                          ) [DesignatorStatementDecrement]
                                        ) [StatementDesignator]
                                      ) [StatementListMulti]
                                      StatementPrint(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               bodovi
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                        MaybePrintWidthEpsilon(
                                        ) [MaybePrintWidthEpsilon]
                                      ) [StatementPrint]
                                    ) [StatementListMulti]
                                    StatementDesignator(
                                      DesignatorStatementAssignment(
                                        DesignatorIdentifier(
                                         nizch
                                        ) [DesignatorIdentifier]
                                        AssignmentOperationExpr(
                                          AssignmentOperator(
                                          ) [AssignmentOperator]
                                          ExprSingle(
                                            SignEpsilon(
                                            ) [SignEpsilon]
                                            TermSingle(
                                              FactorNewArray(
                                                Type(
                                                 char
                                                ) [Type]
                                                ArrayElement(
                                                  ExprSingle(
                                                    SignEpsilon(
                                                    ) [SignEpsilon]
                                                    TermSingle(
                                                      FactorConstant(
                                                        ConstFactorNumber(
                                                         3
                                                        ) [ConstFactorNumber]
                                                      ) [FactorConstant]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ArrayElement]
                                              ) [FactorNewArray]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [AssignmentOperationExpr]
                                      ) [DesignatorStatementAssignment]
                                    ) [StatementDesignator]
                                  ) [StatementListMulti]
                                  StatementDesignator(
                                    DesignatorStatementAssignment(
                                      DesignatorElementAccess(
                                        DesignatorIdentifier(
                                         nizch
                                        ) [DesignatorIdentifier]
                                        ArrayElement(
                                          ExprSingle(
                                            SignEpsilon(
                                            ) [SignEpsilon]
                                            TermSingle(
                                              FactorConstant(
                                                ConstFactorNumber(
                                                 0
                                                ) [ConstFactorNumber]
                                              ) [FactorConstant]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ArrayElement]
                                      ) [DesignatorElementAccess]
                                      AssignmentOperationExpr(
                                        AssignmentOperator(
                                        ) [AssignmentOperator]
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorConstant(
                                              ConstFactorCharacter(
                                               a
                                              ) [ConstFactorCharacter]
                                            ) [FactorConstant]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [AssignmentOperationExpr]
                                    ) [DesignatorStatementAssignment]
                                  ) [StatementDesignator]
                                ) [StatementListMulti]
                                StatementDesignator(
                                  DesignatorStatementAssignment(
                                    DesignatorElementAccess(
                                      DesignatorIdentifier(
                                       nizch
                                      ) [DesignatorIdentifier]
                                      ArrayElement(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               jedan
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ArrayElement]
                                    ) [DesignatorElementAccess]
                                    AssignmentOperationExpr(
                                      AssignmentOperator(
                                      ) [AssignmentOperator]
                                      ExprSingle(
                                        SignEpsilon(
                                        ) [SignEpsilon]
                                        TermSingle(
                                          FactorConstant(
                                            ConstFactorCharacter(
                                             b
                                            ) [ConstFactorCharacter]
                                          ) [FactorConstant]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [AssignmentOperationExpr]
                                  ) [DesignatorStatementAssignment]
                                ) [StatementDesignator]
                              ) [StatementListMulti]
                              StatementDesignator(
                                DesignatorStatementAssignment(
                                  DesignatorElementAccess(
                                    DesignatorIdentifier(
                                     nizch
                                    ) [DesignatorIdentifier]
                                    ArrayElement(
                                      ExprMulti(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               pet
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                        AdditionOperatorSubtraction(
                                        ) [AdditionOperatorSubtraction]
                                        TermSingle(
                                          FactorConstant(
                                            ConstFactorNumber(
                                             3
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermSingle]
                                      ) [ExprMulti]
                                    ) [ArrayElement]
                                  ) [DesignatorElementAccess]
                                  AssignmentOperationExpr(
                                    AssignmentOperator(
                                    ) [AssignmentOperator]
                                    ExprSingle(
                                      SignEpsilon(
                                      ) [SignEpsilon]
                                      TermSingle(
                                        FactorConstant(
                                          ConstFactorCharacter(
                                           c
                                          ) [ConstFactorCharacter]
                                        ) [FactorConstant]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [AssignmentOperationExpr]
                                ) [DesignatorStatementAssignment]
                              ) [StatementDesignator]
                            ) [StatementListMulti]
                            StatementPrint(
                              ExprSingle(
                                SignEpsilon(
                                ) [SignEpsilon]
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorElementAccess(
                                      DesignatorIdentifier(
                                       nizch
                                      ) [DesignatorIdentifier]
                                      ArrayElement(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermSingle(
                                            FactorConstant(
                                              ConstFactorNumber(
                                               1
                                              ) [ConstFactorNumber]
                                            ) [FactorConstant]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ArrayElement]
                                    ) [DesignatorElementAccess]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              MaybePrintWidthEpsilon(
                              ) [MaybePrintWidthEpsilon]
                            ) [StatementPrint]
                          ) [StatementListMulti]
                          StatementPrint(
                            ExprSingle(
                              SignEpsilon(
                              ) [SignEpsilon]
                              TermSingle(
                                FactorDesignator(
                                  DesignatorElementAccess(
                                    DesignatorIdentifier(
                                     nizch
                                    ) [DesignatorIdentifier]
                                    ArrayElement(
                                      ExprSingle(
                                        SignEpsilon(
                                        ) [SignEpsilon]
                                        TermMulti(
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorIdentifier(
                                               jedan
                                              ) [DesignatorIdentifier]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                          MultiplicationOperatorMultiplication(
                                          ) [MultiplicationOperatorMultiplication]
                                          FactorConstant(
                                            ConstFactorNumber(
                                             2
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermMulti]
                                      ) [ExprSingle]
                                    ) [ArrayElement]
                                  ) [DesignatorElementAccess]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            MaybePrintWidthEpsilon(
                            ) [MaybePrintWidthEpsilon]
                          ) [StatementPrint]
                        ) [StatementListMulti]
                        StatementRead(
                          DesignatorIdentifier(
                           bodovi
                          ) [DesignatorIdentifier]
                        ) [StatementRead]
                      ) [StatementListMulti]
                      StatementDesignator(
                        DesignatorStatementAssignment(
                          DesignatorIdentifier(
                           bodovi
                          ) [DesignatorIdentifier]
                          AssignmentOperationExpr(
                            AssignmentOperator(
                            ) [AssignmentOperator]
                            ExprMulti(
                              ExprMulti(
                                ExprSingle(
                                  SignNegative(
                                  ) [SignNegative]
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorIdentifier(
                                       bodovi
                                      ) [DesignatorIdentifier]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                                AdditionOperatorAddition(
                                ) [AdditionOperatorAddition]
                                TermMulti(
                                  TermSingle(
                                    FactorExpr(
                                      ExprMulti(
                                        ExprSingle(
                                          SignEpsilon(
                                          ) [SignEpsilon]
                                          TermMulti(
                                            TermMulti(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorIdentifier(
                                                   pet
                                                  ) [DesignatorIdentifier]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                              MultiplicationOperatorMultiplication(
                                              ) [MultiplicationOperatorMultiplication]
                                              FactorDesignator(
                                                DesignatorIdentifier(
                                                 a
                                                ) [DesignatorIdentifier]
                                              ) [FactorDesignator]
                                            ) [TermMulti]
                                            MultiplicationOperatorDivision(
                                            ) [MultiplicationOperatorDivision]
                                            FactorConstant(
                                              ConstFactorNumber(
                                               2
                                              ) [ConstFactorNumber]
                                            ) [FactorConstant]
                                          ) [TermMulti]
                                        ) [ExprSingle]
                                        AdditionOperatorSubtraction(
                                        ) [AdditionOperatorSubtraction]
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorIdentifier(
                                             jedan
                                            ) [DesignatorIdentifier]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprMulti]
                                    ) [FactorExpr]
                                  ) [TermSingle]
                                  MultiplicationOperatorMultiplication(
                                  ) [MultiplicationOperatorMultiplication]
                                  FactorDesignator(
                                    DesignatorIdentifier(
                                     bodovi
                                    ) [DesignatorIdentifier]
                                  ) [FactorDesignator]
                                ) [TermMulti]
                              ) [ExprMulti]
                              AdditionOperatorSubtraction(
                              ) [AdditionOperatorSubtraction]
                              TermSingle(
                                FactorExpr(
                                  ExprMulti(
                                    ExprMulti(
                                      ExprSingle(
                                        SignEpsilon(
                                        ) [SignEpsilon]
                                        TermMulti(
                                          TermSingle(
                                            FactorConstant(
                                              ConstFactorNumber(
                                               3
                                              ) [ConstFactorNumber]
                                            ) [FactorConstant]
                                          ) [TermSingle]
                                          MultiplicationOperatorModulo(
                                          ) [MultiplicationOperatorModulo]
                                          FactorConstant(
                                            ConstFactorNumber(
                                             2
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermMulti]
                                      ) [ExprSingle]
                                      AdditionOperatorAddition(
                                      ) [AdditionOperatorAddition]
                                      TermMulti(
                                        TermSingle(
                                          FactorConstant(
                                            ConstFactorNumber(
                                             3
                                            ) [ConstFactorNumber]
                                          ) [FactorConstant]
                                        ) [TermSingle]
                                        MultiplicationOperatorMultiplication(
                                        ) [MultiplicationOperatorMultiplication]
                                        FactorConstant(
                                          ConstFactorNumber(
                                           2
                                          ) [ConstFactorNumber]
                                        ) [FactorConstant]
                                      ) [TermMulti]
                                    ) [ExprMulti]
                                    AdditionOperatorSubtraction(
                                    ) [AdditionOperatorSubtraction]
                                    TermSingle(
                                      FactorConstant(
                                        ConstFactorNumber(
                                         3
                                        ) [ConstFactorNumber]
                                      ) [FactorConstant]
                                    ) [TermSingle]
                                  ) [ExprMulti]
                                ) [FactorExpr]
                              ) [TermSingle]
                            ) [ExprMulti]
                          ) [AssignmentOperationExpr]
                        ) [DesignatorStatementAssignment]
                      ) [StatementDesignator]
                    ) [StatementListMulti]
                    StatementPrint(
                      ExprSingle(
                        SignEpsilon(
                        ) [SignEpsilon]
                        TermSingle(
                          FactorDesignator(
                            DesignatorIdentifier(
                             bodovi
                            ) [DesignatorIdentifier]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      MaybePrintWidthEpsilon(
                      ) [MaybePrintWidthEpsilon]
                    ) [StatementPrint]
                  ) [StatementListMulti]
                  StatementPrint(
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorDesignator(
                          DesignatorElementAccess(
                            DesignatorIdentifier(
                             nizch
                            ) [DesignatorIdentifier]
                            ArrayElement(
                              ExprSingle(
                                SignEpsilon(
                                ) [SignEpsilon]
                                TermSingle(
                                  FactorConstant(
                                    ConstFactorNumber(
                                     1
                                    ) [ConstFactorNumber]
                                  ) [FactorConstant]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ArrayElement]
                          ) [DesignatorElementAccess]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    MaybePrintWidthEpsilon(
                    ) [MaybePrintWidthEpsilon]
                  ) [StatementPrint]
                ) [StatementListMulti]
                StatementDesignator(
                  DesignatorStatementAssignment(
                    DesignatorElementAccess(
                      DesignatorIdentifier(
                       niz
                      ) [DesignatorIdentifier]
                      ArrayElement(
                        ExprSingle(
                          SignEpsilon(
                          ) [SignEpsilon]
                          TermSingle(
                            FactorConstant(
                              ConstFactorNumber(
                               2
                              ) [ConstFactorNumber]
                            ) [FactorConstant]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ArrayElement]
                    ) [DesignatorElementAccess]
                    AssignmentOperationExpr(
                      AssignmentOperator(
                      ) [AssignmentOperator]
                      ExprSingle(
                        SignEpsilon(
                        ) [SignEpsilon]
                        TermSingle(
                          FactorConstant(
                            ConstFactorNumber(
                             5
                            ) [ConstFactorNumber]
                          ) [FactorConstant]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [AssignmentOperationExpr]
                  ) [DesignatorStatementAssignment]
                ) [StatementDesignator]
              ) [StatementListMulti]
              StatementDesignator(
                DesignatorStatementAssignment(
                  DesignatorIdentifier(
                   bodovi
                  ) [DesignatorIdentifier]
                  AssignmentOperationExpr(
                    AssignmentOperator(
                    ) [AssignmentOperator]
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorFunctionInvocation(
                          FunctionInvocationHeader(
                            DesignatorIdentifier(
                             sum
                            ) [DesignatorIdentifier]
                          ) [FunctionInvocationHeader]
                          FunctionInvocation(
                            MaybeActParsIsActPars(
                              ActParsMulti(
                                ActParsSingle(
                                  ActualParameter(
                                    ExprSingle(
                                      SignEpsilon(
                                      ) [SignEpsilon]
                                      TermSingle(
                                        FactorFunctionInvocation(
                                          FunctionInvocationHeader(
                                            DesignatorIdentifier(
                                             sum
                                            ) [DesignatorIdentifier]
                                          ) [FunctionInvocationHeader]
                                          FunctionInvocation(
                                            MaybeActParsIsActPars(
                                              ActParsMulti(
                                                ActParsSingle(
                                                  ActualParameter(
                                                    ExprSingle(
                                                      SignEpsilon(
                                                      ) [SignEpsilon]
                                                      TermSingle(
                                                        FactorConstant(
                                                          ConstFactorNumber(
                                                           4
                                                          ) [ConstFactorNumber]
                                                        ) [FactorConstant]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ActualParameter]
                                                ) [ActParsSingle]
                                                ActualParameter(
                                                  ExprSingle(
                                                    SignEpsilon(
                                                    ) [SignEpsilon]
                                                    TermSingle(
                                                      FactorConstant(
                                                        ConstFactorNumber(
                                                         5
                                                        ) [ConstFactorNumber]
                                                      ) [FactorConstant]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActualParameter]
                                              ) [ActParsMulti]
                                            ) [MaybeActParsIsActPars]
                                          ) [FunctionInvocation]
                                        ) [FactorFunctionInvocation]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ActualParameter]
                                ) [ActParsSingle]
                                ActualParameter(
                                  ExprSingle(
                                    SignEpsilon(
                                    ) [SignEpsilon]
                                    TermSingle(
                                      FactorFunctionInvocation(
                                        FunctionInvocationHeader(
                                          DesignatorIdentifier(
                                           sum
                                          ) [DesignatorIdentifier]
                                        ) [FunctionInvocationHeader]
                                        FunctionInvocation(
                                          MaybeActParsIsActPars(
                                            ActParsMulti(
                                              ActParsSingle(
                                                ActualParameter(
                                                  ExprSingle(
                                                    SignEpsilon(
                                                    ) [SignEpsilon]
                                                    TermSingle(
                                                      FactorConstant(
                                                        ConstFactorNumber(
                                                         4
                                                        ) [ConstFactorNumber]
                                                      ) [FactorConstant]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ActualParameter]
                                              ) [ActParsSingle]
                                              ActualParameter(
                                                ExprSingle(
                                                  SignEpsilon(
                                                  ) [SignEpsilon]
                                                  TermSingle(
                                                    FactorConstant(
                                                      ConstFactorNumber(
                                                       5
                                                      ) [ConstFactorNumber]
                                                    ) [FactorConstant]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ActualParameter]
                                            ) [ActParsMulti]
                                          ) [MaybeActParsIsActPars]
                                        ) [FunctionInvocation]
                                      ) [FactorFunctionInvocation]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ActualParameter]
                              ) [ActParsMulti]
                            ) [MaybeActParsIsActPars]
                          ) [FunctionInvocation]
                        ) [FactorFunctionInvocation]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [AssignmentOperationExpr]
                ) [DesignatorStatementAssignment]
              ) [StatementDesignator]
            ) [StatementListMulti]
            StatementWhile(
              StatementWhileHeader(
              ) [StatementWhileHeader]
              ConditionSingle(
                CondTermSingle(
                  CondFactMulti(
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorConstant(
                          ConstFactorNumber(
                           2
                          ) [ConstFactorNumber]
                        ) [FactorConstant]
                      ) [TermSingle]
                    ) [ExprSingle]
                    RelationalOperatorGreaterThan(
                    ) [RelationalOperatorGreaterThan]
                    ExprSingle(
                      SignEpsilon(
                      ) [SignEpsilon]
                      TermSingle(
                        FactorConstant(
                          ConstFactorNumber(
                           1
                          ) [ConstFactorNumber]
                        ) [FactorConstant]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [CondFactMulti]
                ) [CondTermSingle]
              ) [ConditionSingle]
              StatementBlock(
                StatementListMulti(
                  StatementListEpsilon(
                  ) [StatementListEpsilon]
                  StatementBreak(
                  ) [StatementBreak]
                ) [StatementListMulti]
              ) [StatementBlock]
            ) [StatementWhile]
          ) [StatementListMulti]
          StatementForEach(
            StatementForEachHeader(
              DesignatorIdentifier(
               niz
              ) [DesignatorIdentifier]
            ) [StatementForEachHeader]
            StatementForEachDesignator(
             bodovi
            ) [StatementForEachDesignator]
            StatementBlock(
              StatementListMulti(
                StatementListEpsilon(
                ) [StatementListEpsilon]
                StatementPrint(
                  ExprSingle(
                    SignEpsilon(
                    ) [SignEpsilon]
                    TermSingle(
                      FactorDesignator(
                        DesignatorIdentifier(
                         bodovi
                        ) [DesignatorIdentifier]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  MaybePrintWidthEpsilon(
                  ) [MaybePrintWidthEpsilon]
                ) [StatementPrint]
              ) [StatementListMulti]
            ) [StatementBlock]
          ) [StatementForEach]
        ) [StatementListMulti]
        StatementDesignator(
          DesignatorStatementUnpack(
            DesignatorStatementUnpackHeader(
            ) [DesignatorStatementUnpackHeader]
            DesignatorListMulti(
              DesignatorListMulti(
                DesignatorListSingle(
                  MaybeDesignatorIsDesignator(
                    DesignatorIdentifier(
                     a
                    ) [DesignatorIdentifier]
                  ) [MaybeDesignatorIsDesignator]
                ) [DesignatorListSingle]
                MaybeDesignatorEpsilon(
                ) [MaybeDesignatorEpsilon]
              ) [DesignatorListMulti]
              MaybeDesignatorIsDesignator(
                DesignatorIdentifier(
                 b
                ) [DesignatorIdentifier]
              ) [MaybeDesignatorIsDesignator]
            ) [DesignatorListMulti]
            DesignatorStatementIntermezzo(
              AssignmentOperator(
              ) [AssignmentOperator]
            ) [DesignatorStatementIntermezzo]
            DesignatorIdentifier(
             niz
            ) [DesignatorIdentifier]
          ) [DesignatorStatementUnpack]
        ) [StatementDesignator]
      ) [StatementListMulti]
    ) [MethodDeclaration]
  ) [MethodDeclarationListMulti]
) [Program]
2023-01-13 05:31:13.809 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:84)] - ===================================
2023-01-13 05:31:13.815 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:88)] - ===================================
2023-01-13 05:31:13.818 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #5] Traversing syntax node Type.
2023-01-13 05:31:13.818 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #5] Traversing syntax node ConstAssignment.
2023-01-13 05:31:13.818 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.visit(SemanticAnalyzer.java:275)] - Basic type constant declaration!
2023-01-13 05:31:13.818 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #5] Declared constant nula of type int and value 0.
2023-01-13 05:31:13.818 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #6] Traversing syntax node Type.
2023-01-13 05:31:13.818 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #6] Traversing syntax node ConstAssignment.
2023-01-13 05:31:13.818 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.visit(SemanticAnalyzer.java:275)] - Basic type constant declaration!
2023-01-13 05:31:13.818 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #6] Declared constant jedan of type int and value 1.
2023-01-13 05:31:13.818 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node Type.
2023-01-13 05:31:13.818 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ConstAssignment.
2023-01-13 05:31:13.819 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.visit(SemanticAnalyzer.java:275)] - Basic type constant declaration!
2023-01-13 05:31:13.819 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #7] Declared constant pet of type int and value 5.
2023-01-13 05:31:13.819 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node Type.
2023-01-13 05:31:13.819 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.819 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #9] Declared global variable niz of type int[].
2023-01-13 05:31:13.819 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.819 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #9] Declared global variable niz2 of type int[].
2023-01-13 05:31:13.819 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.819 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #9] Declared global variable a of type int.
2023-01-13 05:31:13.820 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.820 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #9] Declared global variable b of type int.
2023-01-13 05:31:13.820 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #10] Traversing syntax node Type.
2023-01-13 05:31:13.820 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #10] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.820 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #10] Declared global variable nizch of type char[].
2023-01-13 05:31:13.820 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node Type.
2023-01-13 05:31:13.820 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node ReturnTypeNonVoid.
2023-01-13 05:31:13.820 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:31:13.820 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node Type.
2023-01-13 05:31:13.820 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node FormalParameter.
2023-01-13 05:31:13.820 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #15] Declared formal parameter z of type int.
2023-01-13 05:31:13.821 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node Type.
2023-01-13 05:31:13.821 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node FormalParameter.
2023-01-13 05:31:13.821 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #15] Declared formal parameter d of type int.
2023-01-13 05:31:13.821 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node Type.
2023-01-13 05:31:13.821 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node LocalVariableDeclaration.
2023-01-13 05:31:13.821 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #15] Declared global variable temp of type int.
2023-01-13 05:31:13.821 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.821 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #17] Detected symbol usage. Name temp, symbol type local variable. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:31:13.821 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.822 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #17] Detected symbol usage. Name z, symbol type formal parameter. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.822 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.822 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node TermSingle.
2023-01-13 05:31:13.822 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #10] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.822 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.822 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #17] Detected symbol usage. Name d, symbol type formal parameter. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:31:13.822 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.822 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node TermSingle.
2023-01-13 05:31:13.822 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #10] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.823 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.823 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #18] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.824 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #18] Detected symbol usage. Name temp, symbol type local variable. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #18] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #18] Traversing syntax node TermSingle.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #2] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #2] Traversing syntax node StatementReturn.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node MethodDeclaration.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node Type.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node ReturnTypeNonVoid.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node Type.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node FormalParameter.
2023-01-13 05:31:13.824 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #20] Declared formal parameter zz of type char.
2023-01-13 05:31:13.824 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node Type.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node FormalParameter.
2023-01-13 05:31:13.825 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #20] Declared formal parameter dd of type char.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.825 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #21] Detected symbol usage. Name zz, symbol type formal parameter. Symbol {name zz, kind Var, type char, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node TermSingle.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #8] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #8] Traversing syntax node StatementReturn.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #20] Traversing syntax node MethodDeclaration.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node ReturnTypeVoid.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #24] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:31:13.825 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #25] Traversing syntax node Type.
2023-01-13 05:31:13.826 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #25] Traversing syntax node LocalVariableDeclaration.
2023-01-13 05:31:13.826 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #25] Declared global variable bodovi of type int.
2023-01-13 05:31:13.826 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #26] Traversing syntax node Type.
2023-01-13 05:31:13.826 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #26] Traversing syntax node LocalVariableDeclaration.
2023-01-13 05:31:13.826 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #26] Declared global variable bt of type bool.
2023-01-13 05:31:13.826 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #28] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.826 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #28] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.826 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #28] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.826 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #28] Traversing syntax node TermSingle.
2023-01-13 05:31:13.826 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.826 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #28] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.827 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #29] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.827 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #29] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.827 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #29] Traversing syntax node DesignatorStatementIncrement.
2023-01-13 05:31:13.828 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.829 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #30] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.829 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.829 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #30] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.829 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.829 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node TermSingle.
2023-01-13 05:31:13.829 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.829 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.830 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #30] Detected symbol usage. Name jedan, symbol type symbolic constant. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.830 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.830 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node TermSingle.
2023-01-13 05:31:13.830 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.830 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #30] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.830 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.830 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #31] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.830 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.830 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #31] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.830 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.831 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node TermSingle.
2023-01-13 05:31:13.831 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.831 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #31] Detected symbol usage. Name pet, symbol type symbolic constant. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.831 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.831 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node TermMulti.
2023-01-13 05:31:13.831 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.831 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.831 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #32] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.832 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #32] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #32] Traversing syntax node DesignatorStatementDecrement.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.832 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #33] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node TermSingle.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.832 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #37] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node Type.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node TermSingle.
2023-01-13 05:31:13.832 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #18] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node FactorNewArray.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node TermSingle.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #8] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #37] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.833 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #38] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node TermSingle.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.833 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #38] Detected symbol usage. Name nizch[0], symbol type array element access. Symbol {name nizch[0], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.833 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node TermSingle.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #38] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.834 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #39] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.834 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #39] Detected symbol usage. Name jedan, symbol type symbolic constant. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node TermSingle.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.834 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #39] Detected symbol usage. Name nizch[jedan], symbol type array element access. Symbol {name nizch[jedan], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node TermSingle.
2023-01-13 05:31:13.834 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #39] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.835 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #40] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.835 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #40] Detected symbol usage. Name pet, symbol type symbolic constant. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.835 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #40] Detected symbol usage. Name nizch[pet - 3], symbol type array element access. Symbol {name nizch[pet - 3], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.835 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #40] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.836 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #41] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node TermSingle.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.836 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #41] Detected symbol usage. Name nizch[1], symbol type array element access. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #41] Traversing syntax node TermSingle.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.836 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.837 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #42] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.837 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #42] Detected symbol usage. Name jedan, symbol type symbolic constant. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node TermSingle.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node TermMulti.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.837 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #42] Detected symbol usage. Name nizch[jedan * 2], symbol type array element access. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #42] Traversing syntax node TermSingle.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #45] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.837 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #45] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.837 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #45] Traversing syntax node StatementRead.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.838 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.838 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.838 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name pet, symbol type symbolic constant. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.838 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name a, symbol type global variable. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:31:13.838 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.839 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.839 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.839 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.839 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.839 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.839 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name jedan, symbol type symbolic constant. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.839 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.839 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node FactorExpr.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.840 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #46] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.840 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node FactorExpr.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #46] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #47] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.841 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #47] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #47] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #47] Traversing syntax node TermSingle.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.841 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.842 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #51] Detected symbol usage. Name nizch, symbol type global variable. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node TermSingle.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #19] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.842 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #51] Detected symbol usage. Name nizch[1], symbol type array element access. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #51] Traversing syntax node TermSingle.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.842 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #54] Detected symbol usage. Name niz, symbol type global variable. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node TermSingle.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.842 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #54] Detected symbol usage. Name niz[2], symbol type array element access. Symbol {name niz[2], kind Elem, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.842 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node TermSingle.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #15] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #54] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.843 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #65] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.843 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #65] Detected symbol usage. Name sum, symbol type global function call. Symbol {name sum, kind Meth, type int, level 2, fpPos 0, adr 0}.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.843 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #65] Detected symbol usage. Name sum, symbol type global function call. Symbol {name sum, kind Meth, type int, level 2, fpPos 0, adr 0}.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #21] Traversing syntax node ActualParameter.
2023-01-13 05:31:13.843 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.844 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.844 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #23] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.844 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #23] Traversing syntax node ActualParameter.
2023-01-13 05:31:13.844 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorFunctionInvocation.
2023-01-13 05:31:13.844 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.844 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:31:13.844 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Skipping local symbol. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:31:13.846 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:31:13.846 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.847 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.847 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.847 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #17] Traversing syntax node ActualParameter.
2023-01-13 05:31:13.847 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.848 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #65] Detected symbol usage. Name sum, symbol type global function call. Symbol {name sum, kind Meth, type int, level 2, fpPos 0, adr 0}.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #31] Traversing syntax node ActualParameter.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #33] Traversing syntax node ActualParameter.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorFunctionInvocation.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Skipping local symbol. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.848 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #26] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #26] Traversing syntax node ActualParameter.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node FactorFunctionInvocation.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected formal parameter. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Skipping local symbol. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name sum(4, 5), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Detected actual parameter. Symbol {name sum(4, 5), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #65] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node StatementWhileHeader.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node TermSingle.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node TermSingle.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #11] Traversing syntax node CondFactMulti.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node StatementBreak.
2023-01-13 05:31:13.849 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #67] Traversing syntax node StatementWhile.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #70] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.850 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #70] Detected symbol usage. Name niz, symbol type global variable. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #70] Traversing syntax node StatementForEachHeader.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #70] Traversing syntax node StatementForEachDesignator.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #73] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.850 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #73] Detected symbol usage. Name bodovi, symbol type local variable. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #73] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #73] Traversing syntax node TermSingle.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #13] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #70] Traversing syntax node StatementForEach.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node DesignatorStatementUnpackHeader.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.850 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #86] Detected symbol usage. Name a, symbol type global variable. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node MaybeDesignatorIsDesignator.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #0] Traversing syntax node MaybeDesignatorEpsilon.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.850 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #86] Detected symbol usage. Name b, symbol type global variable. Symbol {name b, kind Var, type int, level 0, fpPos -1, adr 3}.
2023-01-13 05:31:13.850 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node MaybeDesignatorIsDesignator.
2023-01-13 05:31:13.851 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorStatementIntermezzo.
2023-01-13 05:31:13.851 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.851 INFO [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logInfo(SemanticAnalyzer.java:59)] - [Line #86] Detected symbol usage. Name niz, symbol type global variable. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:31:13.851 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Traversing syntax node DesignatorStatementUnpack.
2023-01-13 05:31:13.851 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Detected unpack statement LHS designator. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:31:13.851 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Detected unpack statement LHS designator. Symbol {null}.
2023-01-13 05:31:13.851 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Detected unpack statement LHS designator. Symbol {name b, kind Var, type int, level 0, fpPos -1, adr 3}.
2023-01-13 05:31:13.851 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #86] Detected unpack statement RHS designator. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:31:13.851 DEBUG [main] [rs.ac.bg.etf.pp1.SemanticAnalyzer.logDebug(SemanticAnalyzer.java:64)] - [Line #24] Traversing syntax node MethodDeclaration.
2023-01-13 05:31:13.852 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:102)] - Declared #3 const variables.
2023-01-13 05:31:13.852 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:103)] - Declared #5 global variables.
2023-01-13 05:31:13.852 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:104)] - Declared #3 local variables.
2023-01-13 05:31:13.852 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:106)] - No semantic error detected. Proceeding with code generation.
2023-01-13 05:31:13.855 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #3] Traversing syntax node ProgramName.
2023-01-13 05:31:13.855 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Added global variable to StaticData memory section. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Added global variable to StaticData memory section. Symbol {name niz2, kind Var, type Arr of int, level 0, fpPos -1, adr 1}.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Added global variable to StaticData memory section. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Added global variable to StaticData memory section. Symbol {name b, kind Var, type int, level 0, fpPos -1, adr 3}.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Traversing syntax node VariableDeclaration.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Added global variable to StaticData memory section. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Generated enter instruction for method sum, level 2, symbolCount 3.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.856 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Propagating Designator symbol to FactorDesignator. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Loading designator. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node TermSingle.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Propagating Factor symbol to TermSingle. Symbol {name z, kind Var, type int, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Propagating Designator symbol to FactorDesignator. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Loading designator. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node TermSingle.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Propagating Factor symbol to TermSingle. Symbol {name d, kind Var, type int, level 1, fpPos 1, adr 1}.
2023-01-13 05:31:13.857 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #10] Generating addition operation. [ + ]
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Storing value to designator (assignment). Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Propagating Designator symbol to FactorDesignator. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Loading designator. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Traversing syntax node TermSingle.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Propagating Factor symbol to TermSingle. Symbol {name temp, kind Var, type int, level 1, fpPos -1, adr 2}.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #2] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #2] Traversing syntax node StatementReturn.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #2] Return statement.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Traversing syntax node MethodDeclaration.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Generating trap instruction to make sure we have a runtime error if we do not return properly from a method which has a return value.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #20] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #20] Generated enter instruction for method sumC, level 2, symbolCount 2.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Propagating Designator symbol to FactorDesignator. Symbol {name zz, kind Var, type char, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Loading designator. Symbol {name zz, kind Var, type char, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.858 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node TermSingle.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Propagating Factor symbol to TermSingle. Symbol {name zz, kind Var, type char, level 1, fpPos 0, adr 0}.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #8] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #8] Traversing syntax node StatementReturn.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #8] Return statement.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #20] Traversing syntax node MethodDeclaration.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #20] Generating trap instruction to make sure we have a runtime error if we do not return properly from a method which has a return value.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #24] Traversing syntax node MethodDeclarationHeader.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #24] Detected mainPc = 39.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #24] Generated enter instruction for method main, level 0, symbolCount 2.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Loading constant factor. Symbol {name 0, kind Con, type int, level 0, fpPos 0, adr 0}.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Traversing syntax node TermSingle.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Propagating Factor symbol to TermSingle. Symbol {name 0, kind Con, type int, level 0, fpPos 0, adr 0}.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #28] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #29] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #29] Traversing syntax node DesignatorStatementIncrement.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #29] Incrementing designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.859 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node TermSingle.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Propagating Designator symbol to FactorDesignator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Loading designator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node TermSingle.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Propagating Factor symbol to TermSingle. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Generating addition operation. [ + ]
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #30] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.860 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node TermSingle.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Propagating Designator symbol to FactorDesignator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Loading designator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node TermMulti.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Generating multiplication operation. [ * ]
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #9] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #32] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #32] Traversing syntax node DesignatorStatementDecrement.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #32] Decrementing designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Traversing syntax node TermSingle.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.861 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Printing expr. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node TermSingle.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #18] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node FactorNewArray.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Allocating new array. Symbol {name dummy, kind Var, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node TermSingle.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Propagating Factor symbol to TermSingle. Symbol {name , kind Con, type Arr of char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #8] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #37] Storing value to designator (assignment). Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Loading constant factor. Symbol {name 0, kind Con, type int, level 0, fpPos 0, adr 0}.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node TermSingle.
2023-01-13 05:31:13.862 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Propagating Factor symbol to TermSingle. Symbol {name 0, kind Con, type int, level 0, fpPos 0, adr 0}.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Loading constant factor. Symbol {name a, kind Con, type char, level 0, fpPos 0, adr 97}.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node TermSingle.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Propagating Factor symbol to TermSingle. Symbol {name a, kind Con, type char, level 0, fpPos 0, adr 97}.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #38] Storing value to designator (assignment). Symbol {name nizch[0], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Propagating Designator symbol to FactorDesignator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Loading designator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node TermSingle.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Propagating Factor symbol to TermSingle. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Loading constant factor. Symbol {name b, kind Con, type char, level 0, fpPos 0, adr 98}.
2023-01-13 05:31:13.863 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node TermSingle.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Propagating Factor symbol to TermSingle. Symbol {name b, kind Con, type char, level 0, fpPos 0, adr 98}.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #39] Storing value to designator (assignment). Symbol {name nizch[jedan], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Propagating Designator symbol to FactorDesignator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Loading designator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Propagating Factor symbol to TermSingle. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Generating addition operation. [ - ]
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.864 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Loading constant factor. Symbol {name c, kind Con, type char, level 0, fpPos 0, adr 99}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node TermSingle.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Propagating Factor symbol to TermSingle. Symbol {name c, kind Con, type char, level 0, fpPos 0, adr 99}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #40] Storing value to designator (assignment). Symbol {name nizch[pet - 3], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Loading constant factor. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node TermSingle.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Propagating Factor symbol to TermSingle. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Propagating Designator symbol to FactorDesignator. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Loading designator. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Traversing syntax node TermSingle.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #41] Propagating Factor symbol to TermSingle. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Printing expr. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.865 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Propagating Designator symbol to FactorDesignator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Loading designator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node TermSingle.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Propagating Factor symbol to TermSingle. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node TermMulti.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Generating multiplication operation. [ * ]
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Propagating Designator symbol to FactorDesignator. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Loading designator. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Traversing syntax node TermSingle.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #42] Propagating Factor symbol to TermSingle. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.866 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Printing expr. Symbol {name nizch[jedan * 2], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #45] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #45] Traversing syntax node StatementRead.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #45] Reading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating instruction for negation since Sign is SignNegative.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name pet, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.867 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ * ]
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ / ]
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name jedan, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Generating addition operation. [ - ]
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name pet * a / 2 - jedan, kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.868 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ * ]
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating addition operation. [ + ]
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ % ]
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermMulti.
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating multiplication operation. [ * ]
2023-01-13 05:31:13.869 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Generating addition operation. [ + ]
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Loading constant factor. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name 3, kind Con, type int, level 0, fpPos 0, adr 3}.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Generating addition operation. [ - ]
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node TermSingle.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Propagating Factor symbol to TermSingle. Symbol {name 3 % 2 + 3 * 2 - 3, kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node ExprMulti.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Generating addition operation. [ - ]
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #46] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Traversing syntax node TermSingle.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #47] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #7] Printing expr. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Loading designator for array element access. Symbol {name nizch, kind Var, type Arr of char, level 0, fpPos -1, adr 4}.
2023-01-13 05:31:13.870 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Loading constant factor. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node TermSingle.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Propagating Factor symbol to TermSingle. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #19] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Propagating Designator symbol to FactorDesignator. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Loading designator. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Traversing syntax node TermSingle.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #51] Propagating Factor symbol to TermSingle. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Printing expr. Symbol {name nizch[1], kind Elem, type char, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Loading designator for array element access. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node TermSingle.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Propagating Factor symbol to TermSingle. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node DesignatorElementAccess.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Loading constant factor. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node TermSingle.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Propagating Factor symbol to TermSingle. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #15] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.871 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #54] Storing value to designator (assignment). Symbol {name niz[2], kind Elem, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Loading constant factor. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Loading constant factor. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #23] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #21] Traversing syntax node FunctionInvocation.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name sum(4, 5), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Loading constant factor. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:31:13.872 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name 4, kind Con, type int, level 0, fpPos 0, adr 4}.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Loading constant factor. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name 5, kind Con, type int, level 0, fpPos 0, adr 5}.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #33] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #31] Traversing syntax node FunctionInvocation.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name sum(4, 5), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #26] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #17] Traversing syntax node FunctionInvocation.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node TermSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Propagating Factor symbol to TermSingle. Symbol {name sum(sum(4, 5), sum(4, 5)), kind Con, type int, level -1, fpPos 0, adr -1}.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Traversing syntax node DesignatorStatementAssignment.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #65] Storing value to designator (assignment). Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Loading constant factor. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Traversing syntax node TermSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Propagating Factor symbol to TermSingle. Symbol {name 2, kind Con, type int, level 0, fpPos 0, adr 2}.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Traversing syntax node FactorConstant.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Loading constant factor. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.873 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Traversing syntax node TermSingle.
2023-01-13 05:31:13.874 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #67] Propagating Factor symbol to TermSingle. Symbol {name 1, kind Con, type int, level 0, fpPos 0, adr 1}.
2023-01-13 05:31:13.874 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.874 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node CondFactMulti.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Performing relational operation. Symbol {name 2 > 1, kind Con, type bool, level -1, fpPos 0, adr 4}.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node CondTermSingle.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Propagating CondFact symbol to CondTermSingle. Symbol {name 2 > 1, kind Con, type bool, level -1, fpPos 0, adr 4}.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Traversing syntax node ConditionSingle.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #11] Propagating CondTerm symbol to ConditionSingle. Symbol {name 2 > 1, kind Con, type bool, level -1, fpPos 0, adr 4}.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #0] Traversing syntax node StatementBreak.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #0] Adding break statement address jump.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #70] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #73] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #73] Traversing syntax node FactorDesignator.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #73] Propagating Designator symbol to FactorDesignator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #73] Loading designator. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #73] Traversing syntax node TermSingle.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #73] Propagating Factor symbol to TermSingle. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node ExprSingle.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Traversing syntax node StatementPrint.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #13] Printing expr. Symbol {name bodovi, kind Var, type int, level 1, fpPos -1, adr 0}.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #0] Traversing syntax node DesignatorStatementUnpackHeader.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Traversing syntax node MaybeDesignatorIsDesignator.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #0] Traversing syntax node MaybeDesignatorEpsilon.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Traversing syntax node MaybeDesignatorIsDesignator.
2023-01-13 05:31:13.875 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Traversing syntax node DesignatorStatementIntermezzo.
2023-01-13 05:31:13.876 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Traversing syntax node DesignatorIdentifier.
2023-01-13 05:31:13.876 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Traversing syntax node DesignatorStatementUnpack.
2023-01-13 05:31:13.876 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Detected unpack statement LHS designator. Symbol {name a, kind Var, type int, level 0, fpPos -1, adr 2}.
2023-01-13 05:31:13.876 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Detected unpack statement LHS designator. Symbol {null}.
2023-01-13 05:31:13.876 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Detected unpack statement LHS designator. Symbol {name b, kind Var, type int, level 0, fpPos -1, adr 3}.
2023-01-13 05:31:13.876 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #86] Detected unpack statement RHS designator. Symbol {name niz, kind Var, type Arr of int, level 0, fpPos -1, adr 0}.
2023-01-13 05:31:13.876 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #24] Traversing syntax node MethodDeclaration.
2023-01-13 05:31:13.876 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #24] Generating exit and return_ instructions to always properly return from method which has no return value.
2023-01-13 05:31:13.876 DEBUG [main] [rs.ac.bg.etf.pp1.CodeGenerator.logDebug(CodeGenerator.java:100)] - [Line #3] Traversing syntax node Program.
2023-01-13 15:34:37.515 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\a.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko2.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\program.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test1312.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test300.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test301.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test302.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test303.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test420.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test666.mj
2023-01-13 15:34:37.518 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:53)] - Parsing source file: D:\ETF\13E114PP1\git\MJCompiler\src\test\resources\test999.mj
2023-01-13 15:34:39.163 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 3: Parsed symbol: program - PROGRAM
2023-01-13 15:34:39.163 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 3: Parsed symbol: test999 - IDENTIFIER
2023-01-13 15:34:39.163 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: int - IDENTIFIER
2023-01-13 15:34:39.197 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:34:39.230 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.230 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.230 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: , - COMMA
2023-01-13 15:34:39.252 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:34:39.252 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.252 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.252 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: , - COMMA
2023-01-13 15:34:39.252 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: a - IDENTIFIER
2023-01-13 15:34:39.252 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: , - COMMA
2023-01-13 15:34:39.260 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: b - IDENTIFIER
2023-01-13 15:34:39.260 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.260 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 8: Parsed symbol: { - LEFT_BRACE
2023-01-13 15:34:39.260 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: void - VOID
2023-01-13 15:34:39.289 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: main - IDENTIFIER
2023-01-13 15:34:39.313 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 15:34:39.336 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 15:34:39.356 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 11: Parsed symbol: { - LEFT_BRACE
2023-01-13 15:34:39.357 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:34:39.358 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:34:39.359 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: new - NEW
2023-01-13 15:34:39.394 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:34:39.394 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.394 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 15:34:39.394 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.394 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.409 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:34:39.409 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:34:39.409 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: new - NEW
2023-01-13 15:34:39.409 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:34:39.409 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.409 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 15:34:39.409 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.409 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.410 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:34:39.410 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.410 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 15:34:39.410 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.410 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:34:39.410 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 15:34:39.410 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.410 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:34:39.410 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:34:39.411 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 15:34:39.412 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.412 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: a - IDENTIFIER
2023-01-13 15:34:39.412 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:34:39.412 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:34:39.412 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.412 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.412 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:34:39.436 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.436 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: a - IDENTIFIER
2023-01-13 15:34:39.436 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: + - ADDITION
2023-01-13 15:34:39.436 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:34:39.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.498 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: , - COMMA
2023-01-13 15:34:39.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:34:39.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 15:34:39.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:34:39.499 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:34:39.516 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: print - PRINT
2023-01-13 15:34:39.516 ERROR [main] [rs.ac.bg.etf.pp1.MJParser.report_error(MJParser.java:530)] - Syntax error while parsing:  on line 23 and column 8 while parsing PRINT with value print
2023-01-13 15:34:39.516 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 15:34:39.516 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:34:39.517 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 15:34:39.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 15:34:39.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: print - PRINT
2023-01-13 15:34:39.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 15:34:39.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:34:39.518 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: print - PRINT
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:34:39.519 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:34:39.520 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 15:34:39.520 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:34:39.520 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 27: Parsed symbol: } - RIGHT_BRACE
2023-01-13 15:34:39.520 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: } - RIGHT_BRACE
2023-01-13 15:34:39.520 ERROR [main] [rs.ac.bg.etf.pp1.MJParser.report_error(MJParser.java:530)] - YOU SHALL NOT PASS! Could not recover from syntax error on line 33 and column 0 while parsing EOF with value null
2023-01-13 15:34:39.520 ERROR [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:62)] - Detected fatal error while parsing [D:\ETF\13E114PP1\git\MJCompiler\src\test\resources\test999.mj]. Will not proceed with semantic analysis and code generation.
2023-01-13 15:35:56.304 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\a.mj
2023-01-13 15:35:56.305 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\acko2.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\program.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test1312.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test300.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test301.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test302.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test303.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test420.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.main(MJParserTest.java:141)] - Skipping... src\test\resources\test666.mj
2023-01-13 15:35:56.306 INFO [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:53)] - Parsing source file: D:\ETF\13E114PP1\git\MJCompiler\src\test\resources\test999.mj
2023-01-13 15:35:56.356 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 3: Parsed symbol: program - PROGRAM
2023-01-13 15:35:56.356 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 3: Parsed symbol: test999 - IDENTIFIER
2023-01-13 15:35:56.356 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: int - IDENTIFIER
2023-01-13 15:35:56.357 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:35:56.358 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.358 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.358 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: , - COMMA
2023-01-13 15:35:56.359 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:35:56.359 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.359 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.359 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: , - COMMA
2023-01-13 15:35:56.360 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: a - IDENTIFIER
2023-01-13 15:35:56.360 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: , - COMMA
2023-01-13 15:35:56.360 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: b - IDENTIFIER
2023-01-13 15:35:56.360 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 6: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.360 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 8: Parsed symbol: { - LEFT_BRACE
2023-01-13 15:35:56.361 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: void - VOID
2023-01-13 15:35:56.361 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: main - IDENTIFIER
2023-01-13 15:35:56.362 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 15:35:56.362 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 9: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 15:35:56.363 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 11: Parsed symbol: { - LEFT_BRACE
2023-01-13 15:35:56.363 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:35:56.364 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:35:56.364 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: new - NEW
2023-01-13 15:35:56.365 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:35:56.365 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.365 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 15:35:56.365 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.366 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 12: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.366 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: new - NEW
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 13: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.367 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 15:35:56.368 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.368 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:35:56.368 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: 3 - CONST_NUMBER
2023-01-13 15:35:56.368 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 15: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.368 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:35:56.368 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.368 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 15:35:56.368 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.368 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 16: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 17: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: a - IDENTIFIER
2023-01-13 15:35:56.369 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:35:56.370 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:35:56.370 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 19: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.370 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.370 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:35:56.370 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.371 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: a - IDENTIFIER
2023-01-13 15:35:56.371 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: + - ADDITION
2023-01-13 15:35:56.371 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:35:56.372 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.372 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: , - COMMA
2023-01-13 15:35:56.372 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:35:56.372 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.372 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 15:35:56.372 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.372 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.373 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: = - ASSIGNMENT
2023-01-13 15:35:56.373 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 21: Parsed symbol: arr - IDENTIFIER
2023-01-13 15:35:56.373 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: print - PRINT
2023-01-13 15:35:56.374 ERROR [main] [rs.ac.bg.etf.pp1.MJParser.report_error(MJParser.java:530)] - Syntax error while parsing:  on line 23 and column 8 while parsing PRINT with value print
2023-01-13 15:35:56.374 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 15:35:56.374 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:35:56.375 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.375 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: 0 - CONST_NUMBER
2023-01-13 15:35:56.375 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.375 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 23: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: print - PRINT
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: 1 - CONST_NUMBER
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 24: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: print - PRINT
2023-01-13 15:35:56.376 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ( - LEFT_PARENTHESES
2023-01-13 15:35:56.377 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: niz - IDENTIFIER
2023-01-13 15:35:56.377 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: [ - LEFT_BRACKET
2023-01-13 15:35:56.377 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: 2 - CONST_NUMBER
2023-01-13 15:35:56.377 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ] - RIGHT_BRACKET
2023-01-13 15:35:56.377 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ) - RIGHT_PARENTHESES
2023-01-13 15:35:56.377 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 25: Parsed symbol: ; - SEMI_COLON
2023-01-13 15:35:56.377 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 27: Parsed symbol: } - RIGHT_BRACE
2023-01-13 15:35:56.377 INFO [main] [rs.ac.bg.etf.pp1.MJParser.scan(MJParser.java:482)] - Line 28: Parsed symbol: } - RIGHT_BRACE
2023-01-13 15:35:56.377 ERROR [main] [rs.ac.bg.etf.pp1.MJParser.report_error(MJParser.java:530)] - YOU SHALL NOT PASS! Could not recover from syntax error on line 33 and column 0 while parsing EOF with value null
2023-01-13 15:35:56.377 ERROR [main] [rs.ac.bg.etf.pp1.MJParserTest.ParseFile(MJParserTest.java:62)] - Detected fatal error while parsing [D:\ETF\13E114PP1\git\MJCompiler\src\test\resources\test999.mj]. Will not proceed with semantic analysis and code generation.
