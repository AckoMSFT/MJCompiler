program test_A_successful
    int a, b, c, d, e, intArray[], niz[], nizTmp[], nizIndex[];
{
    void main() {
        {
            print('t'); print('e'); print('s'); print('t'); print(' '); print ('i'); print('/'); print('o'); print(eol);
            read(a);
            print(a, 3);
            intArray = new int[10];
            read(intArray[2]);
            print(eol);
            print(intArray[2]);
            print('a', 10);
            print(false);
            print(eol);
            print(20130010);
            print(eol);
        }

        {
            print('t'); print('e'); print('s'); print('t'); print(' '); print ('a'); print('r'); print('r');
            print('E'); print('l'); print('e'); print('m'); print(' '); print ('i'); print('n'); print('c');
            print('/'); print('d'); print('e'); print('c'); print(eol);
            niz = new int[5]; // 0 0 0 0 0
            niz[0]++; // 1 0 0 0 0
            niz[4]--; // 1 0 0 0 -1
            niz[niz[0]]++; // 1 1 0 0 -1
            niz[niz[0] * 2 + niz[1]]++; // expr: 1 * 2 + 1 = 3 ... 1 1 0 1 -1
            print(niz[0]);
            print(niz[1]);
            print(niz[2]);
            print(niz[3]);
            print(niz[4]);
            print(eol); // 1 1 0 1 -1
        }

        {
            print('t'); print('e'); print('s'); print('t'); print(' ');
            print('u'); print('n'); print('p'); print('a'); print('c'); print('k'); print(eol);
            niz[0] = 1;
            niz[1] = 2;
            niz[2] = 3;
            niz[3] = 4;
            niz[4] = 5;
            [a, b, c, d, e] = niz;
            print(a); print(b); print(c); print(d); print(e); print(eol); // 1 2 3 4 5
            [e, d, c, b, a] = niz;
            print(a); print(b); print(c); print(d); print(e); print(eol); // 5 4 3 2 1
            niz[0] = 10;
            niz[1] = 20;
            niz[2] = 30;
            niz[3] = 40;
            niz[4] = 50;
            [a] = niz;
            print(a); print(b); print(c); print(d); print(e); print(eol); // 10 4 3 2 1
            [e, , a] = niz;
            print(a); print(b); print(c); print(d); print(e); print(eol); // 30 4 3 2 10
            nizTmp = new int[5];
            print(nizTmp[0]); print(nizTmp[1]); print(nizTmp[2]); print(eol); // 0 0 0
            [nizTmp[2], nizTmp[1], nizTmp[0]] = niz;
            print(nizTmp[0]); print(nizTmp[1]); print(nizTmp[2]); print(eol); // 30 20 10
            niz[3] = 2;
            [, , , , nizTmp[niz[3]]] = niz;
            print(nizTmp[0]); print(nizTmp[1]); print(nizTmp[2]); print(eol); // 30 20 50
            nizIndex = new int[5];
            nizIndex[0] = 1;
            nizIndex[1] = 2;
            nizIndex[2] = 3;
            nizIndex[3] = 4;
            nizIndex[4] = 5;
            niz[0] = 111;
            niz[1] = 222;
            niz[2] = 333;
            niz[3] = 444;
            niz[4] = 555;
            print(nizIndex[nizIndex[nizIndex[nizIndex[nizIndex[0]]]]] - 1);
            print(nizIndex[nizIndex[nizIndex[nizIndex[0]]]] - 1);
            print(nizIndex[nizIndex[nizIndex[0]]] - 1);
            print(nizIndex[nizIndex[0]] - 1);
            print(nizIndex[0] - 1);
            print(eol); // 4 3 2 1 0
            [
                nizTmp[nizIndex[nizIndex[nizIndex[nizIndex[nizIndex[0]]]]] - 1] // 4 elem
            ,
                nizTmp[nizIndex[nizIndex[nizIndex[nizIndex[0]]]] - 1] // 3 elem
            ,
                nizTmp[nizIndex[nizIndex[nizIndex[0]]] - 1] // 2 elem
            ,
                nizTmp[nizIndex[nizIndex[0]] - 1] // 1 elem
            ,
                nizTmp[nizIndex[0] - 1] // 0 elem
            ] = niz;
            print(nizTmp[0]); print(nizTmp[1]); print(nizTmp[2]); print(nizTmp[3]); print(nizTmp[4]); print(eol);
            // 555 444 333 222 111
        }
        {
            print('t'); print('e'); print('s'); print('t'); print(' '); print('r'); print('e'); print('a'); print('d'); print(eol);
            read(nizTmp[nizIndex[nizIndex[nizIndex[nizIndex[nizIndex[0]]]]] - 1]);
            print(nizTmp[0]); print(nizTmp[1]); print(nizTmp[2]); print(nizTmp[3]); print(nizTmp[4]); print(eol);
            // 555 444 333 222 $INPUT
        }
    }
}

// Input:
// 3 1 42
// Output:
//  test i/o
//    3
//      1a    0
//  20130010
//  test arrElem inc/dec
//      1    1    0    1   -1
//  test unpack
//      1    2    3    4    5
//      5    4    3    2    1
//     10    4    3    2    1
//     30    4    3    2   10
//      0    0    0
//     30   20   10
//     30   20   50
//      4    3    2    1    0
//    555  444  333  222  111
//  test read
//    555  444  333  222   42
